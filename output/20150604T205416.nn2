ccopy_reg
_reconstructor
p1
(cpsspred
MultilayerPerceptron
p2
c__builtin__
object
p3
NtRp4
(dp5
S'b_h'
p6
g1
(ctheano.tensor.sharedvar
TensorSharedVariable
p7
g3
NtRp8
(dp9
S'auto_name'
p10
S'auto_656'
p11
sS'index'
p12
NsS'tag'
p13
(itheano.gof.utils
scratchpad
p14
(dp15
S'trace'
p16
(lp17
(S'/home/junshuai.zhang/theano/lib/python2.7/site-packages/Theano-0.7.0rc2-py2.7.egg/theano/compile/sharedvalue.py'
p18
I209
S'shared'
p19
S'utils.add_tag_trace(var)'
tp20
asbsS'container'
p21
g1
(ctheano.gof.link
Container
p22
g3
NtRp23
(dp24
S'name'
p25
NsS'storage'
p26
(lp27
cnumpy.core.multiarray
_reconstruct
p28
(cnumpy
ndarray
p29
(I0
tS'b'
tRp30
(I1
(I63
tcnumpy
dtype
p31
(S'f4'
I0
I1
tRp32
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x8f\xf8\xd0\xbe\xb4\xf8\x16?\x0fq\x11>(\xa8\xf3\xbe\xa1(s?\xd0wK\xbf\xc7\x1a\xba\xbe\xce\x90\xc5\xbf\\?\n\xbe`\xc1#\xbe\xaf\xac\x95\xbem\x17k\xbf\xf1\xaa\xc3\xbd\xb8d\xc0=\xb4]\x89\xbd>\x87\xe9\xbeZ\xf6\xe6=\xeb\x06+?U&\x0c<,\xc8\x80=w\x19\\\xbek\xe6\n>\xb0\xa5\xaa\xbe\xe85T\xbd|\x1ak\xbeFn\xa9\xbe\r\x88"\xbe]Q\x16\xbf\xed\xf8L\xbf\x87\xa9\x94>\xef|N\xbfh\x1d\xd4=\x8enV\xbeF$y\xbd]9E\xbf\xc8\xb0\x92\xbfs"\x83=\xb1\xbb\x1b\xbf\xbf~W>\x97\xb3\xcb>\xa4\x19@?\xb6+7?\x1d\x1f<>*\xe4\xdc\xbdL\xf2\x03\xbdG\xcd\xb5<\x90e\xf2>\xef\xa38>H\x03\xad=a>g\xbf\x90\xf3*?\xdcUo\xbe\x01@,>\xf5l\xd4>Y\xdb\x0c\xbfZx\xd5\xber\xde\xce\xbe\xab\xb2\x90\xbf7\xbf\x0f?\xf6\xb6T\xbf\xd1EQ\xbe\x86\x81V>q\xed\xb1\xbe'
tbasS'strict'
p33
I00
sS'readonly'
p34
I00
sS'type'
p35
g1
(ctheano.tensor.type
TensorType
p36
g3
NtRp37
(dp38
S'broadcastable'
p39
(I00
tp40
sS'dtype'
p41
S'float32'
p42
sS'numpy_dtype'
p43
g32
sS'sparse_grad'
p44
I00
sg25
NsbsS'allow_downcast'
p45
Nsbsg25
NsS'owner'
p46
Nsg35
g37
sbsS'W_o'
p47
g1
(g7
g3
NtRp48
(dp49
g10
S'auto_657'
p50
sg12
Nsg13
(itheano.gof.utils
scratchpad
p51
(dp52
g16
(lp53
(g18
I209
g19
S'utils.add_tag_trace(var)'
tp54
asbsg21
g1
(g22
g3
NtRp55
(dp56
g25
Nsg26
(lp57
g28
(g29
(I0
tS'b'
tRp58
(I1
(I63
I3
tg32
I00
S'>\x7f\'@2{<\xbf\x9d\xca8?,\xba\xf2\xbf\xday\x06@\xe3\'\xc7>\x80\xee\x1c@\xb8 \xcf\xbf#\x83\xed?\xd7\x00\x94\xbeN\xbe\x9b\xbev\xe79?g\xb4\x8d?/\x97\x97\xbfu\xd4<?\xb7\xeb\\\xbeZ\xe4\xf8>\xf8\xbc/\xbe?\xee\r\xbf\x87\x03\x8b>\xb3\x1b\xd0>\x81*\xa8>\x08\x1bq\xbfu\x05\xc2@\xd1P\xee=x\xee\xfe\xbez\x00O?\x8f;\xd5\xbe\xd3\xdan=\xbd\x96\xb6>y\x14\x1b\xbf\xda\x8f\xb6?\xaa\xc2\x8e>t\xef\xe0?\x9e\xffj\xbfl}\xfa@\x8ei\xb6\xbe7\x96~\xbeu\xa0 ?r\x1b\xea=\xf1\xe5\xc1>:\xd3\x98\xbe\xd7lC>\x1a\x1d\xb9>C\x15\x04\xbf\x96\t\xef=\x9d(\x81\xbfE6g?\xdds\x07\xc0\xbe\xe2!\xbfY\xb4K@\xc5\xa2\xca\xbdj*\x85A\x9eZ\x0f\xc0\xf8iu?\xbaA\xb8?(m\x87\xbe\xc6\xf6\x0b\xbf\xe4\xd1c?X\xf4\xee>Dv\xfa\xbd\xcc\xe8\xcc>o\xfeH\xbe\xe3\x92\xed>\x14E\xcf\xbe\xe9\xf1\x04>\xa9\x80\xce\xbf\x1aD\r@p\xd1\x1f@\xc4\xe8z\xbf"\xb6\xf2?\x81\xfe\x08@\xe0\xab+@\xed\xack\xbf\xc4\x00v>\xaf\xf7\xc4>XT\xfb>\x1e\x10\x04\xbf4t\x90=\ts3?\xb9d\xb7\xbe\x81\x93I@C\xa8\x98@\xf6\xf3\xff\xbf\xa2\xdd\x16@\x9d\x9a\xe3\xbe4H\xbd>\'\xaa\x9e\xbff\x19!\xbf\xe9A\xf2?9\xb9\xfd\xbe(\xdc!\xbf\x91\x10\x08@\xea\xfc\xd9>\xccS\x03\xbf\x8fB\xd7=1\xbb\x04?\x93\x85\xd4\xbeTe\xba=_\x0bg?\x1f\x9c\x1c\xbf@<\xa2>.\xdf\x86?\x97\x85c\xbfV\x80\x11@\xd5\x1fv@\xc2\x1d~\xbe\xf7\x8dc=$\x939\xbf\x8c\xf5\xe0?\x91\xfeF?S\xc8\r?\xf6\xc5\x7f\xbf\x1d\xff\x16@\xa5\x83"\xbfL\xa8\x97?Z\x91\xdc>\x84\xcc=?\x17\x9e|\xbffE\xd0>\x0e!\xad\xbf\xa1\x8a\xba?\xd9\xfd|>5\xf5_?H\x99E\xbf\xac\x90\x9f>\xab0b?\xd6!\xf6\xbe\xfe\xa8\xfb>\xfb\xc0\xfe\xbf[\x0f\x1c@\x1b\xc9I@\xf6H\xd3\xbe\x98c#>\xbaW\x86>\xbc_\xc5\xbeZ\xb2i>\xe9\xd8\x8b>\xb8!\xd9@\x06\xca\xb7\xbf\xa6\xf8%\xc0\xe7\xec\xa7@\xea \xdd\xbf\xa8\x9d\xfa\xbf\xe6\xdc\xb9=\xacK\x84>\xdf\xfa\xb8\xbe=t\xe2\xbed;J@\tO\xa7?\x82\x85\x86?\xb5\xad\xeb\xbesoP?H\xa8\x91>\xa2\xc6\xf7=\x80%\xa3\xbe\x1f\xa0\xb3?\x05\x9fu\xbf\xa0\xe6\xf6\xbc\n\x84\x05\xc0o=a\xbf\t\xcc]@\xb0\xdf\xb8>\t\xc1b@\xe3\xae\\\xbe\x96\x85\x03\xbe\xb8q\xf5\xbe\xe1\x8d\x80?\x92n\x7f>ft\x15\xbf\x1a\x04e?\xb9\n\xdb\xbe\x8c5\x0bA\xddI<?\x10\x1f\xbe?\x1a\x8b\xa3\xbf?\xf6\xa7>\xbb!??\xc5r\x80\xbe\x90\xb5g\xbeu\x93\xdb\xbd?dh\xbeko\xb3>=\xdc*@\x8a\xa4\xb7\xbf\xbf:\x04\xbfp\xb50?YS\x12\xbf\xf5\x8b\x80?'
tbasg33
I00
sg34
I00
sg35
g1
(g36
g3
NtRp59
(dp60
g39
(I00
I00
tp61
sg41
S'float32'
p62
sg43
g32
sg44
I00
sg25
Nsbsg45
Nsbsg25
Nsg46
Nsg35
g59
sbsS'L2_sqr'
p63
g1
(ctheano.tensor.var
TensorVariable
p64
g3
NtRp65
(dp66
g10
S'auto_733'
p67
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p68
(dp69
g16
(lp70
(S'/home/junshuai.zhang/PSSPred/psspred.py'
p71
I257
S'__init__'
p72
S'self.L2_sqr = T.sum((self.W_h**2)) + T.sum((self.W_o**2))'
tp73
asbsg25
Nsg46
g1
(ctheano.gof.graph
Apply
p74
g3
NtRp75
(dp76
S'inputs'
p77
(lp78
g1
(g64
g3
NtRp79
(dp80
g10
S'auto_722'
p81
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p82
(dp83
g16
(lp84
(g71
I257
g72
S'self.L2_sqr = T.sum((self.W_h**2)) + T.sum((self.W_o**2))'
tp85
asbsg25
Nsg46
g1
(g74
g3
NtRp86
(dp87
g77
(lp88
g1
(g64
g3
NtRp89
(dp90
g10
S'auto_721'
p91
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p92
(dp93
g16
(lp94
(g71
I257
g72
S'self.L2_sqr = T.sum((self.W_h**2)) + T.sum((self.W_o**2))'
tp95
asbsg25
Nsg46
g1
(g74
g3
NtRp96
(dp97
g77
(lp98
g1
(g7
g3
NtRp99
(dp100
g10
S'auto_655'
p101
sg12
Nsg13
(itheano.gof.utils
scratchpad
p102
(dp103
g16
(lp104
(g18
I209
g19
S'utils.add_tag_trace(var)'
tp105
asbsg21
g1
(g22
g3
NtRp106
(dp107
g25
Nsg26
(lp108
g28
(g29
(I0
tS'b'
tRp109
(I1
(I63
I63
tg32
I00
S'v\xde\xa9>\x85\xe7\x00?\x06\x9e\x9d>\xed\xe0\x0e=\x8e\xcf\x19\xbf\xcd\x83\xa2\xbeI\x81\xd9>]\x9d\x10\xbf\xdf\xcel\xbfy\x05y\xbe\x91,\x93\xbe\x03B\x00\xbf1P=?mZ\r?`|\x1c?\xc3\x93G\xbd\xa3\x90\x8d\xbe\xfc\xc5\xb2>4\xdf\x84\xbd\xa9\x8f\xc2>\xce\x17\x14\xbf\x87\'\x80\xbe\xc7\xda\x0f\xbf\\GM\xbfN\xd0\x8e\xbeU\xce\xf5>p\xdb\xda\xbfE\x17S\xbf1v5\xbe\xa6\xaf\x12?\xb6\xd9\xdc\xbe>\xab\xda>\xc9FM\xbf\x08o\x00?\xb1AP\xbe\xeb\x02\xfd\xbe\xd1\xe4\xbe\xbc\xf2\xf7\x08\xbf\xc4,\x92>`\xe7\x0c?\xba.v\xbe\x08iS\xbe\xfe\x15S>\n\x81\x9e\xbe\xaa\xc4\xba\xbe\n0\xb0=v\xdf\x9b>\x88\x07k?\xbc\xd8Y\xbfyx\x08\xbf\xf6\xc1i\xbf1\xdb\x81\xbf\x84\xf1\xce=\x1e\xd7\xb0\xbe5\x12\xa8\xbe6\xaeg\xbeC\xd1.\xbdN\xaa\x10\xbf\x0e4@>]J\x05\xbf\xfaO\x84\xbe\xdf\xec\xe0\xbe\xbd\xa7\xba>y\xb4\x80\xbeu\x17\x12?\xa0\xfe\x9c>Fv\xe4>S>\xd4>4\xf8\xa2\xbe\xa9\xf3[?\x0e\x9b\x1d\xbe\xb6\x82;\xbe\xed\xbd\x9e=F\xfd\x9c\xbe\xf7\xd8>\xbe\xe9@\x14>|\n8?#\xdbD>N\xb9\xc2\xbe\x12\xc4\x18\xbeE!\x97>\\K\x94>\x1d+-?v?\xcc>9q\xf6>\xe6u\x1e\xbe\xe1\xacx>U\xb6\xc5\xbec\x8aG\xbenM\xa3?\x95\xa4\xc6\xbe\x9e\x1c\xf5\xbc\x90U\x90>^\xe7"\xbdPp\xad\xbe\x03\x86\xab\xbe\x9c,\xa3>3r<\xbf\x902-\xbef\x9a\xe2>L\x1a2\xbf\x1c\x0b\xf5\xbc\x13\x01\xb0=\xcc\\x\xbd\xfeZ\x01?\xd9{\xd4\xbd e \xbf\xf4y\x1b?\x18~\x9b\xbe\xfd\xe8\x9a>\xd0\x86\x92?\xfe\xbf.\xbft2\xc7\xbe\xcd\x15\xc6<\xce\xbc\xd3\xbeE\xb9\x0f?\xca\x8d\xb2\xbe\xc5\xda\x8b\xbf\xa9\xc1\xf6\xbd\x89\x8b\x8f<\x89\xcf\xd0\xbeBu\xe0\xbc\xb4\xf6\xb1\xbd7r\x00\xbf\xc6\xcf\xb8\xbeh \x9d>#\x18\x01\xbf\xf4y>?$\xcd\x0e?\x90Vb\xbe\xf9\x86\x01?D\xc4\x95?C\xed\xb6>MW\x01\xbfW7\x01\xbf\x01\x1f\x83>\xd4\xef\xe3\xbeO\x82\x89\xbe\xda\xde\xc8\xbe\x84\xef\x85\xbe\x06\'^\xbf\xf065>\xc6T\xb5\xbe\n\xaa4?\x8f\xaf\xe5=\xd0l9>#\xb2\xdf\xbc\xd5\xc2I\xbf\xd8\xb6\xd1\xbe-\x0f\xbd\xbcI\rd\xbe\x07\xa7d=gX\xcf>Mn\xa0\xbd?F\xe7\xbe;\x97z>p`E>2<.\xbf\xc4e\x80?\xf7=\x04\xbf\xe1\x9b\x04?\xffoH\xbf<;\xee>\xb1\x1f\xb0\xbeF\x85\x86>\x08~\n?\xbea\x07\xbf\xd5P\xe1>\xa5\xfb\x87\xbf\x8cK8=es\xce\xbe\x16}!\xbe\xb1|\x17>\n\xa4w?\xab\x83\x17\xbe\xbaj\xf5\xbd\xfe\x9f\x1a\xbf\x9c6<?\xf9\x15\xe2=\xa4u\xc4\xbe\xcb\x06\xac\xbf\xd0\xc8Y\xbf\xb4\xa5\x85?!\xb0\xbc\xbacO\xff>\x99\xcd\xb3><\xf2w\xbfV\x899\xbe\xc2\x19l\xbd\xb4\xcb\x95\xbch\xcb\x19>\x94\x94B>\xe6@\x95\xbd<\xa5\xab>\xf1\xf0\xb6?c\x1di\xbe\xeb\xfd\x06\xbf6\xd5.>\xa9\x13_?\xdc\x055?9\xa5\xa4\xbc\x80\xa3\x9d\xbe\x92-\x12\xbe\x03\x86\xe1\xbe\xba\xce\x1d?j&\x92\xbe\x11\x97%\xbe\xd8\xdd\x01\xbfen\x12>\xd7.\x80\xbf-)7?\xe1Y\x8a\xbc^h\x03\xbf]\x97i=\x15T\xfa>\xea\x0b5\xbf\x01\xef\xa3\xbe\xe9\xec\x00\xbf\x0fz\xb5=\xf3\xd7f\xbfj\x0b#\xbf\xa2;[\xbe\xa3$\xf0\xbeq\xc6\xfb\xbe\xf6(B\xbc/(\t?+\xca\x95\xbe\xdbK\x0e?\x15\x92\x11?\xcf0#>\xe5\xd6\x88>2t{<\xacz`\xbeZ\xf2\xa6>t|\xfe\xbd1\xb7??R\x9f\x9e=s<\xaf=\x8c\xaf/?q\x1f\x90>\xa2\xaa\xcf>ti\xf9\xbe75t\xbe\nR\xfd>y\\\x88\xbe\xa4b\x07\xbf\xea\xa0b<\xa9\xc2\xc7>\xf5\x1fi?iY\x80\xbe\xdf\x00(<v\x7f\xe6= \xedM?\x1biN\xbe\x0f\x0c\x90\xbe\xf0\xf7L\xbe\xc1v\x80>\x9em5?\x91\x8f\x1c?\xed\xfc\xc5\xbd\xcf\\\xa6\xbeC\xdd3?\xe7\x1e\xe3>\x9bl\x80\xbeP\x82\xb8\xbdp!G?fb#\xbf&J\xa3>v<\\\xbe\x8ae\xb5\xbd\xfcKZ\xbe\x90\x8fQ?\x1f\x0f\xbf\xbef\x88\xd9>CiJ\xbej\x96\x83>\xf51"\xbf\xbe\x1f\x1b\xbe6[\xf9>\x06\xf0\x04\xbfv\xfe\xcf>#\xe9K?\xcd\xc6\xff\xbe\xb0DP?\x1dSH\xbf\xfcA\xf5\xbe\xe3\x02K?\xb5\x8c%\xbdl)k?ad\x04\xbf\'\x1b/?\x97cg\xbe\xc0\xcc\xf6>\x95\xb1$?\xc6^\xaa>\xc5Z\xc5\xbe7\x94\xc6>.\x1c\r\xbf\x7f\xa3N?\x04Q\\>\x14\xacI>\x9fY\x8a\xbeR}\xcb=7v,>\x08\x91\xa4\xbe\x98k\xbc\xbe\n*,>}\x13\x1e\xbfY\xb6\xbb<\xdd\x1d\x8e\xbe\xf5\xfb\x8c>]~.?qO\xd0>\xee\x107>?\xdf\x05>\xa5\xd7&?\x1c<\xba\xbeZ\x85\x8f=\xe2T\x05?\x9aI\t\xbf\xa7<C\xbfv<\x7f\xbf\x1d-\xed\xbe,\xdbF\xbd\x03\xd6\xa1>3Y\xc3>\xd5\xd3R\xbe\xee\x03o\xbeO~\xab>\xa4\xef\x0e\xbf\x97\x97\x04?\x80\xc8\xf9\xbdK\xd2\xa1\xbc\x06!\x80=\x8c$??2\x19\x89\xbf|9F\xbf\x1b\x9b\x0f>\xcf\x0e\x80<e|g\xbe\xfa\xabS?{\xa2\x0f\xbf^\xbc\xb0\xbe,\xf8\xbd\xbe\xb2.\x0b?\xe9\xf7U\xbf\n\x93\xca>\xae\xb24?\xee\xb4\x11\xbdW\x9a\x9c>$\x07c>\xf3\xa5\x8d>\x97`\xf1\xbe\xc6\xa0\x99=\xd2\x1f\x83\xbf\x8e5\x02?)k\x1e>\x94B:=\x9c\xc6\x91\xbe\x16*\xf5\xbd\xb9\x03$>O]0?}\x96\x85>\xb6r\xa6\xbe1\xa9\x18\xbe\x1a\x9b\x00?\xde\x1e\xc3\xbe\xfb\x07]\xbeo\xc5\xb4\xbe \xa1\x1d\xbf\xf1T\xbe\xbe\x87\x16\xce\xbey\xa4\x04\xbe\x8f\x9b\xe6=T\xfb\xfe\xbe?\x94v=\xcc\xc2\xba\xbdZd\x84>\xb8&\xc6>{\x01\xad>l\xc7\xc3> \xf7J\xbf\xbb\x98\x90>\x05\xfc\x94\xbe\x0e\x14\xa4>\x15+\xaf\xbe\x01\x8aM\xbe\x05\xfd\n\xbep\x86\xc3=\xa4%j>\xa4\xcf\xbd>\x98.)\xbdi\xfbH\xbf\xdaL#>\xbb\xd5v=\xb9U\xa5>,\xaf \xbfc\xae\x15\xbf+|\xb3\xbd]\x0fm>\xb8\xf1\x0b\xbf_\xe0\xfc=\x1e\xb9\x13?T\xb4\x8f\xbf\x89 P\xbfG |?}6\xd9\xbe{)\x18?\x8a\x8a,>\xf6\x92\xb2\xbdr\x00I=\xda\xdb\xcf\xbe\xc8\xa2M\xbe\xcf\x87\xa4>\x862R=V\xbf\xde\xbe\xe3\xbav>\x8c\x9d\x16\xbf\x1d\x93V\xbb%O\x1c\xbey\xb7\x84>\x7f\xad\x8d\xbe\xa2\xb5\xf7>g\x7f\x0b=\xd3\xd2\x1b>\xdd\xb4v\xbe\x04\xbc)\xbf\x98\xd2t>\xec\xf6p\xbf=\xdc\x11?\xc2\xb4w=zj&?\xb6\xf3\r?\xd6\x8d\x1b\xbf\xc42\xa1>\xb0\xe05?\xb0\xb3\xdd>\xb0F\x16\xbeS\xf9\xd0>s\xd3\xa5=,\xb9\xf1>\\sq>I|\x15\xbf \x00\x9a>\x16E\x9c\xbe\x0e\xc8\x02?\xe7\xa4\xa9?\x13\x07\x0c\xbf\xfe\xab/\xbf\x08Yl?\xca{\x17?\xc3V\xbc>\x0b]\xc0>].\x1c?\x1c\xa0\x16?\x94\x05\xc4\xbc\xfd\x01\x07\xbf|\xe2\xc3\xbe\x00\xa0\x0f?D\x01\xad\xbe\x95\x8b\xc9\xbef\x0b\x82\xbe0\x17\x83\xbdI,$\xbf\xdc\xe9\xaf\xbf\xbe\xbeP\xbe\x9c\x05\x9b\xbe\xb2\xbe\x94?\xf2m\xc0>\x12\x8b}\xbe\x0e\xdf5?&^\xd6\xbe\x1f\xb8\x9f\xbe\xf5\x1e\x0c\xbf\x83\xad\xb0\xbez\xbe\xe7\xbc\xc5;v\xbdH\x90\x85\xbe\x9b\xf9\x80\xbe|\x16\xbd>\x99\xd4\xbb\xbe\x92FO\xbe4\x88O?\x0c\xbe\xaa\xb9\n\xe2E?\xd8\xffS?%P\x08\xbf\xef\x0ei\xbd\xe4`\xa3\xbd\x04\xe7e\xbf\x9f\x81\\=\x8aP=>U\xfb\x00\xbe\x0bKG=+\x1a\xe7>\xf9,g>6h0?\t\xb5\xed>\xea\xf4r\xbd\xdfw\x15>DO\x02\xbbH\xf8D?m\xdcJ\xbez\x1co\xbf8<\xcb>\xd8\x1a\xc4\xbe\xd6\x10\xe7>\x86%\xf9\xbe\xfd#\xc4>\'\xf8\xff\xbeI_\xb9>\xc6d\xe4\xbe\x135T\xbf\xe3\xc5\x92?\x00\x8e\x12\xbe,!\x8c>/\xc1\x8a?\x02\xe1q\xbf\x93\xad\xb7\xbd\xc4\xaa\xbc\xbeL\x89,\xbe\xa1i\xf5>|\xa1G\xbf\x05\x8b\x0f=\xde\xb7\x14>\xd9\xefS\xbf(=\xf8\xbeN\x94\x0e\xbf\x8e\x1d\xc3>\x18\xf4\x8e?\x92\xc5\xe7\xbe\xb4\xdda=Gt\xe7\xbd\xb0\x84_?Y#\x90\xbe\xf1\x9dF\xbc\x00:@?\x8a]4\xbf\xcf\x11\xe7\xbe:;\x16>i\x0e\x9f\xbe\xa9u\x1c\xbe\xf7\xb8\xbe>\t\x0c\x83\xbe\x81\xc8\xdb=*\xe9\x9a>f\x99o\xbe|\x18\t\xbf\x93\xd7w?\xa1\x80F>\x14(\xc7=9\x07\x11\xbc\x88\x03\xad\xbe\xcb\xe1\x81\xbeA\xcfZ\xbeV\xdb\xb4\xbe\xebQ<>D\x1c\xc7>\x1f\xf1\x18\xbfL\x94\x83>\xb7\xca\xb1>\x9d88>H%3<\x11@\xff\xbe\xe8\x7f\x81>[6\'>\x94\xd7\x13\xbf\xe7\xb3\x00\xbf=\xe7z?\xe3\x10\xb1>\'\x06\x8f=\xfb^2\xbd\xd1\xd7&?\x89\x01\xd5\xbe\x01\r\xc1\xbe\x92\x7f@?\xb3\x0c\xa1=J\xeb#\xbf\xca\x83\x97>*\x0b\xb7\xberA\xdf\xbe0^\xc4=\xa43\xaf\xbd\xa4\xd6s?d\x7fe\xbd\x8f\xac\x8e\xbe/\x85\x1d\xbf}\x87\xb9\xbei\xe7U\xbe>/\x0c?\xfaQ\x11\xbf4\xf6\x8c\xbe[\xaa\xd6\xbesw2\xbfm\r\x83\xbe\x86\x92\xc3\xbeS,\xb6\xbe\xfd\xc4\x07\xbe\x10\xf7\xf4=|\xbc\x80><3\xf9=~\xb8\xeb\xbe\x9b\xc4\n\xbf\x1cq\x92=.F\xad\xbe\xb7C\t<l\xf4\x89\xbe"\x0c\x18?\xe7\xecc\xbf\x8370\xbf\xac\x95\x02\xbfHd\x1f?T\xb4C\xbf\xb8\xc7w?\x1e\x8d\x8a\xbe\x87\x9f\x19?\xcd\x1f\xad\xbcE\xb9\x04>\r\x0f\x1c?\xe4\xa2\xf2=\x9f\x1b\xd1>\x92q\x17\xbe\x9an\xe2\xbd\xb7\xcb\xc1\xbe\xbbB\xde\xbe\xfb\xe7i>\\A\t\xbe\x149d\xbe\xf9\x85X>\xe2\xd1/>O,\x18\xbf\xf04\xb3\xbe\x12\xbb\x1b=\xdd\xb6I>\xdf\xd0p=\x9e\x1e\xbe\xbetn]>\x8a\xc4\x87\xbe\xc0\x12\xa3\xbeV\xf2B?`T\x03\xbf\x08v7\xbd`\x84p\xbd\xcf\xbfE?0\xfa\xcb;\x8a\x8a\xeb\xbev%M>n\xe2\xc3\xbd\x8a\xfc\x9d\xbd\xe6\xaa\xaf\xbe\xeb\x92\xcd\xbd\x87\xf4M=\xec\xdf\xbe>d\xed\x97=*\xab\xa9\xbd\x86~\xa6\xbeG\x82@?\x1ew\xc5\xbe\xd3\xd6\x83\xbd\x90\x85\xc0>B\t\x06>\xbf\xe4\x9a>\xfb\xf7\x13\xbf+\x87\xba\xbe`\xbf\xb5\xbc\x8cI\xfc\xbet\\"\xbe\xd6\xde\xfd\xbe\xaf\xc0\xe3\xbeE\xac\x85>\xaf\x861>\xde\xf9\x18\xbf\xd6\x0cN\xbf\xa6W\x97\xbe=\x84\xeb\xbe\\.\xfb\xbe_\x95|?o\x9f\x97\xbe~\xd9\x81\xbf\x8f\xbe7\xbd\x92\x96.\xbf\xbc\xc4\x82=3\xe05\xbf\xabU"?\xffi\x80\xbd\xf7 \xdd\xbet4\x8e\xbem\xc6K\xbd\xf1\x8b\x05\xbeY\xaad\xbet\xf3\x80?\xe2\x8c)?Q7\xb5>\xe1R\x19\xbe#-\x06>&\xce`=\xa4RS?\xb5l\x89>V\xf4]\xbf\xdf\xb5\t\xbf\x12\x01\xd6\xbe\xbf\xb7\x14?-8\x93>\xfe]B\xbf\x9cK\xd5<\x9f\xc7\xf0\xbe\x90\xb0\xaf>\xd7\xbag?\xea\x1f\x12>\xc5fK?n\xfb@>\xbbp\xf2\xbev\xfd\xb0>r\xc5??\x11%\x8a=T\x9e\x94\xbd\xa2q\x1c>\xa0\x8d\xb1\xbeQ\x9eq>=\x1f>>lj\x89\xbe\x0eJ\xe7>zs\xde>Md\xf7\xbe\x04\xc7r\xbe1d\x92>w\xf3#>\x97K\x0c\xbf\x02\x81+\xbf\x890\xb6>%c\xa5>#G\xac\xbeG\xf8b?+4y=|\xf84>\xf2T\x9a\xbf9\x91\xbe\xbe\xcb3+>T\xec\x90\xbd\xe3\xde\x8a?\xb8L\xfb\xbe\x06\xbf\xb5\xbe,\xda\xf5\xbep\x07\x8c=\xbcA9\xbf\xfd\xc9`\xbfx\x00\x12?{c\x99>C=\xb0=\xe0\xaa\x01\xbf\x01\xfe\xfd>\xe0\xaf\xe0\xbe\x05G\xa9\xbec\x1e\x15\xbf#!\x96>U6\xf7\xbe\xdd=&=v\xd3\x03@o\xba\xbd=\x98\xd4\x99<\x1fO\xa1>\x1c\x9a4\xbe1h\xe8\xbd]>\x86\xbeZ\xbb\x00\xbf\x15\xb5$>x\x82(\xbe\x12\xd1\x14\xbc;\xac\x1c=Vs\x86\xbf&\x01\xb6>\xb3\xda\xdd\xbe\xc6\xe9<?\x88\xaf\xd8>M\xbf%\xbf\xc4Y\x8b\xbf\r\xbf\x8c>\x82\x85\t\xbf!U\xa7=\x08y\x03\xbe\xd7\x00\x80\xbe\xa6\x91\x9e>\xd3\xca[\xbf\xa4?\xe7\xbd\xe4.\xeb\xbe\x1a\x1a\xe4<\x0e2\xf8\xbe\xa4\xa7\xee>j\xf1\xe4>_f)\xbf\x9eX\x00\xbf\x13\xd0\x00\xbeC\xa0\n\xbf\x85q\x1d\xbe\xaaK\xf4<\xc42\xe9\xbdy\x9d\xfd=\xe6\x1c\x13\xbf\xaes\xc8>\xdf\xfa\xff\xbe\xae\rO?S_\x0f?\xa0|\x01\xbf\xcc\xa3)? \xea\xfc=\x89\x1a\xe1\xbe{w\xfe;i\x82\x94>E^#?\xf5\x1e\xd7>\xb3\xe8;?t.\x1c\xbdJ-k>\x8f\x08\x00\xbf\xc9QX?\xc3\xd4\xd8\xbe{\xe1H\xbd\xce:}>\xfa#;?\xa4\xaa;\xbe\xb7f;\xbe\x0b_\x89>D\x86\x88\xbe\x04bS>\xa7\x98\xa5?\xc6Y]\xbd\x80z\x92\xbex\xfa}\xbe1&>\xbev\xa6\x10?\x01\x17\xe9\xbd\xa3r\xb3\xbdE>\x8c\xbf\xec9\x86\xbf\xd2\xa5\xb5\xbe\x8c\x0b$?\xc1\x89\xdd>\x0f\xfb\xd5=z\xd6\x08?\xbf\x8fw\xbe&\x0c\x17?\xcc\xeca>f\xd8,?\xa0\x86\xb9\xbd\x7fxp\xbf\xb9\xe2\x10?\xdc\xcc\x08>\xec\x00\xb8\xbd\xad\x179\xbe\x8f\xea+\xbf*\xd1#?\xb5\xd0\x1c\xbf\xba\xf0\xf9>\xc2(Z\xbfu@^\xbf\xd1\xaa\xee\xbe}\x81\x99\xbe\xb3\xf6\x81=p\x94\xb4>V\xfc\x06\xbf>\xe5\x92>\xb8\xdc\x8d>\xa8\xced\xbc L\xe9>\xaf\xef\x0c\xbf\x1e:\x18=\xd1\xde\xe4>W\xb4\xf6>>r{\xbe^N\xfe>\x84S\x16\xbf\x96\xa55?\x11\x95^?\xba\xd1\xa5\xbe\xbc\xc9\x0e>\x03O\x11>\x07\x9e\x84\xbe\x05Y\xd5>\xfa\x1f\xea=O=\x8f?\xa5\x81\xa2>\x0f\xe8\x13=\xb2>o\xbc\xa3\xd8\x97\xbe\xc2\x9b,\xbfr\x19^=\x88A\x0b?CC0\xbf\xf5\xb7\x97\xbe\x07\xd2e\xbe:\xf1\x8f>\xa3\xbf\xe0\xbc\xdf4\xd6>\xd6\t\xfa=\xbc86\xbfZe{>jJZ?\r\x14\xe6\xbdL\xe7S?p\xe0\x1b>@\x81\xcb\xbd\x01sn?\x0f6\xca\xbe\xe3\x15A=\x00\xe1)\xbf\xf4G\x8b=\xde[\xb5\xbe\xda\x91\xd8=(<_\xbfl\xf2\x9b\xbd]\xe7\x88>\xf2\xb9\xde\xbe\xa8\xddt\xbe\x04\xe9\x10?g\x9e\xa1>>\xd7\xc2>M\x933>\xf7^\xf3\xbe\x7f;\xf4\xbe\x12\x08\xf5\xbd@u\xb0\xbdB\'s=\x0b\xa9i\xbf\xb4{\xac>\xd0Y`>\x97U\xad>,\x99\x81\xbe\xd7\xb9\x04\xbd\xba0\xd3\xbd\x97\xe5B?\xc8\xc6\x8c<\xe5.\xa2>|Q\xd8\xbeha1\xbf\x95\xb6\xeb>\xcfY\t?\x99\xbe\x86\xbeFJ,>\xee\x92W?\xf7\xb3\x8e\xbe\x82\xa1\x7f>z\x86\xcd\xbe;\xd9L\xbf\xb4\xef\xe3>\xac\xee\xf7\xbe\x90\x8aB\xbd\xfb\xbc+@\x11\x9fh\xbe\x91\x8a(\xbf2\x0e\xc5\xbe8\xd8\x8f?\xf68:?\xd0<\x9d\xbeN2\x85>"\xac\x13\xbf\xa9\xbb\xb4\xbb\x19\xc6\xc9\xbe\xb6{\x98?&\x8cl\xbd\xac\xac\x19\xbfw:^?\xd2\xeb\xbe>\x1fa\x1b?f\xe5D?MjV\xbe\xf9\x10\x90\xbf\xa2OQ>\xa8\xc2\x93<.\x14\\\xbf\xcb\xfcs\xbe\x88W\n?\t\x01\x98=\\\x02R\xbf08X\xbeZ^\xb2\xbe\xcci\x16\xbez\xeaE\xbeIM\x07\xbf?|1\xbevV\xf3>\x86\x8bu>o\xde8\xbf\x04\xc0T>\xcdJ0\xbe\xe7\xc8\xe0\xbe\xe3\xd6A?!]\xc4\xbf\x89cN\xbf\x83\xae\x7f\xbffw%?\xa2\x17\xf1>\x1aH\x1e>p\xc0>?\xf3\xca\xf1\xbe\x9d\'\xe7>\xcd\xa6\x01?\xef\xc07?\x82\xff\x9c={\xdci\xbc#\xce\xc2\xbe\xdc5\xf9\xbd\x8eY\xa0=/\x84\xeb\xbegq\xff>\x91\x04\x00\xbf\xfc\xce\x1c?\x04\xd2\x9d?\x0b\x07\x02>\xf4\xe2\x07\xbfry\xd7\xbf\xb3\xaf\x89=VY<?\x95JU?\x1d],?\xae\x13\x0e\xbd\x02\xe5\x80\xbf\x87\xe5\x98\xbe\x1c\xbd\xd8\xbe\x87\x02\xd4>\x14\x95\x8e=KeS?\x9d\x05o\xbf\xf8eV\xbf\x80\xdb\x84?V*7?\xd7\x97F?@m\x8e=;\x8a\xc2>\xbd\xdf\x03?\x169\xf3>h\xa5{\xbb=\xb2I\xbf\xf6\xfa \xbfp\x9a\x92\xbfHK\xeb\xbe\x10\x84\x05?\xc7\xab\xd3\xbe\x03\x0c\xf3=]\xa8j\xbe\xd0>\x88;0}\x1c\xbf\xce\xc3V\xbfUN\xf7\xbd\xca\xf5\xe9>\xa7\xc0\xe3\xbeg\x9c\xc8\xbe\xd9\x0ew\xbfg\xe9K\xbf\xc0B\xf0>#C\x8a\xbe\xd4&$\xbe\xec]\'>7\x97~?\x08I\xf0=\xd8\x8f\xa1>\x13\xc6\xb8>6A\x93>\xab\xc1&\xbf\xca\x13\x06\xbf\x92\xb6g=\x8a\xe5\x85=\xde\x03X\xbc\xa1q@? \xc5i>i\x8d\'\xbb\xbec$\xbe\xcbv\x99\xbf\xb6vE?\xf4\x0b\xd7\xbe\x19\x9c\x9a?\xcd\xe8\xfe>cJt\xbf[\'4\xbfR\xc0\x18\xbe\x99\x1d\xac\xbe\xcfN\xa7=7\xd3\xae\xbd\xe1\x12\xc8\xbeQd\x82\xbex6\xc0>\x86\xf3\xc9>o\xab\xa6>\xbf\xbf)\xbf\xa9L\x93>\xc4x\xe4;\xbb\xec^>{69?\x01\xde\xc2>X\x9d\x16?\xf5\xcdb<\xe8\xec\xb0\xbe\x9b1&?\xbc\x01\xd5\xbe\xb9\x13\x00\xbf\xbd\x91s\xbf\xb4\x08*\xbf?\xb60\xbeA\x8a\xd8\xbe\x9c5\x07\xbf&\x924\xbc\x97)\xd2\xbe\xe48\x03\xbf\xe82e\xbf\xb7\x98\x18\xbf\x0b\xa49\xbf\xf9a\x05\xbe\xc7\xc9\x8a\xbe\xcc\xc0\xff\xbe\xfe\xce\xe0=\xd6u\x8a\xbe\x0c]\x9b>mr\x00\xbf\xf7\xdb^>rp\x14>\x17\xda\x10=\xbd\xc6Z>\xef}]?\xd0\xbb\xdb>P\xde\x02?\xd5\xb7\x1c?\x8f\x9d\x8f?\xd24$\xbdC\xcf\x97=\xfd\x93\xa3\xbe5\xd8%\xbd\xcf8\xb1\xbe2{\xdd\xbd\xc1\x90T?x\x06\x98\xbe\xeb\xc7\xb5>\x189\x85\xbe\x151q?;\x8a\xd4>\x8b\x83u\xbf(@\xdc\xbdt#"@\xca|\xfe\xbf\xe2O5>\xda\x0b2?\xca\x80D\xbe\r^\xa2?\x12\xc5\xfb\xbe\xf5\xa0\xcf\xbe\x81!$?\x8e\xb6&\xbf\xe3\x02\x17>\x90\t\x98?FZb?\x01kC\xbfq\xd53?\xe3\xd6B\xbd\x9cs\\\xbd\xe6\x15\xdb>\xa5\x8a\x1a\xbe\xa0]!?\x83t\xf9>p@\xc2;\x13]\xdb\xbe\x06_.\xbe~\xba\x1d>\xd1u\x00\xbd\x1d\xfcZ\xbf\x1a\x1ck?0n^?\x17\xe5:\xbd\x8e\xa5\x03\xbfj\x8f\xd9\xbe\x96<=\xbdR\xe3\xdb\xbe}V\xe1\xbe\x99\x7f\x8d\xbfY\xf66>0\xe0!?.e0\xbfH\xa3~?}u8\xbe\xca\xfeC\xbf\xf4\x90+\xbf\x19\xfb\x12>u\xed}\xbf\x9c\x7f\xa5>*\xc3\x0e?:H\x1e?)3\xb3=_"\x1e?\xa0\xd5M?2\xe6d>\xd8q\xe6>\xb1\xe9\xa5\xbe\xbdXH=\xf5Z4\xbf\x86\xac\xff\xbe@&\xbf>\xfb\xbd\xde\xbe3l\x06>\x1f\\s\xbe\x14\xaf\x1f?\xca=O>L_y\xbf\xd2R\xba\xbf0[/?\t\tG?>a\xf4\xbe\x0b\xb1\xdc\xbe\xa7\xc8\xd9\xbe\xc56}?\x8a\xe8(\xbfh1\xe4\xbeX%\xa5>S\xea\x90\xbe\xbe\xc3%>\xc3\xfbT?\xb3L\x0f?\xb7\x9e\x97>\x94B\x02\xbe\xd2R\xbf>9\t\x18>\xebE\xd4>\x8b\x8d\x01?O=D\xbf\xaf"\xf2\xbe\xaa\xa9\xa8>\x8a\xc4\xb7\xbc,\x82\x9a?\xaf\xa9\x89\xbf\xfd\xeb\x10\xbf,\xe6\xd9\xbe\xc2\xb2\xf0\xbe\xd1\xf1)?\xc0\x97\xa7>\x99\xae\x96>\xd5D\x9d\xbe\xe6\xbc\x0c\xbf\xcda\x86?W+\x03\xbf\xf53O\xbd8\x08\x8d\xbfX\xbb\xb3\xbe\xae\x17\x10\xbf)\x0b\x94\xbe\xda0\x8a?\x10\xc7\x9a?b(\xcf=\xc3_4>nc\x19?\xd8^,\xbfG[_\xbf}\x9c\xd5\xbe\xd8cs\xbd\'\x9e\xbb=\x1a\xdb\x02?\xfa\xc2\xee>\xb3W\x0b?.\xac:?\xaa\xa7\xfe\xbe1yb\xbf\r\xf5\x96>\xff\xbd\x01\xbe< \xcd;U\xf9\xb6\xbeZ\xcd\xe2\xbe\xcd\xd1\x9f\xbe\xb7\xca\xa7\xbf2\xa2\xa5\xbe\x89\x0c\x8d>1\xb6\x04\xbf\xee\x825?\xa5\x0c\x80\xbe\x91\xf8$\xbfF\x98r\xbc\x0cL\x1d\xbf\xef\'*\xbe[r\x14=\x19\xbf\x04\xbfu\x14\x97\xbfCW%?\xa7\x89Z>g\xb54;\xdd\xed\x8f=k\x8d\xb0\xbe\x12\r\xf7>\xae^\x00\xbe\xfe\xb02\xbe\x91\xbf\x08?}\xbe\xf0>f7;\xbf\x02\r\x00?\xfd\x86\x03\xbf\xde\xfc\xee>\xd2\xf4\x17?g|\x01\xbeyuf\xbe\xa4\x14\xc9\xbe\x0f\x8c\x14>U4\x08\xbf\x104\'\xbf<\xb8\xa7\xbdx\'\xa7\xbeR\xa1\xc8=\xd8\x0b6\xbf\t\x9c\xea>\x0f\xf9\x7f?\xc1\xd5\xa3\xbdyZ\x92><\xa0\xd5\xbe\xf8\xc5\x06?\x81\x17\x88>\x07\xfb\r?\xb2\xdd(?\x826r?yk,>o\xec\x8e\xbf\xb2\x86H\xbe\xb0\xbb\x0b?\xee\xd6M\xbc\xc8\xb5\xb6\xbe\xbe]\x07\xbf\xd1\\\x07\xbf\x17\xab\x80?\xe7\xc1\xed\xbe\x9f\xdf\xcf?\x12\xa8\xa2\xbd\x1f\x9bs\xbf\xb9\xb5\x98\xbfP\x82\xb9?\xa9N\xab\xbe\x8aV\x95\xbd_\xb1\xc3\xbb\xb3\t\x82\xbe\xde\xe59?s\x0e\xff<!I\x06\xbf\xd5g8?\xfdv\xd1\xbe\xc0\xcdX\xbe\x92\xc1\x14>\xbd\xb8#>w\\\x80?\x12\xdc6\xbe\xde\xe8\xce\xbdG\xd0\x02>\x1cp\x91\xbe\x9f7@?vz\x9a>q\xc4Y\xbf\xfb\xd7\x90?\xd7\xa4\xfe>\xcaGA\xbf\xee\xe0\x04\xbf\t\xf8o?F,\xfb\xbd6\x99\x00\xbfeX\xca??\xf3\x07?#\xfc\xb4\xbd\xff\xdbL\xbcfv7?\xba\xcan\xbe1\t\\\xbfy\xee\x03\xc0\xa3\xea.?\x97\xc5M>\xf1\xf1\xbd=\x14g\xa7?\x04\xb1\x87\xbf%\xda\xe7\xbfI\x96\x06\xbf[\xe5\xb0>D&\x86=\xd3\x02\x92?Ls\xfd\xbe+\x08w?c\xf2\x01\xbf\xb6\xb9\x07?\xd6K\x8a\xbd\x13.n?\xace\x0b>ZB%\xbd\x00t\x8a\xbf%\r\x8c=\xb8_\xeb\xbe\xdf\xf0\x02?1\x8d\xeb?^)\x1a?h\xb0\xd3\xbe|i\xef>\x99\x1a-?\x10D\x9f\xbe\x83\x04!>\\$\xe5>\n\xeaC?]\x95,=\xb4"\x0f>wEW>\xaa\xf99?cD\x85\xbf\xe2\xdd\x13?\xc6q\xba\xbe?\x13\xfb\xbe\x9e#\x10?\x98T\x0f?\xbb\x8e)\xbe\xd5\xfc\xf6?:\xc2\x14\xbd\xbe\xa6\x9a>\xc4\xf4\x9a\xbc&_U\xbe(\x82W>\xc1\x90\xad\xbe\xf5\xad\x08\xc0\xa8\xc1\x9b\xbeD{\x97\xbd\x99\xca ?<(\x16\xbf\x82\xe6\xf8\xbet\x0f\xa4\xbd\xfc\xff\x07\xbeT\x92\x8e>@\x7f\xcf>[\xa3\xa9\xbe\xea\xeb^\xbd\xfc\xc3\xa9>\xfb\xb8\x93?\xb9x\xc4\xbf\x88\xc0\xc9:z\x0c\'>U\xaav\xbfs\xba\xa8\xbb\x97G0\xbf\x08v2?\xf4\xbeC\xbe\xbc\x1e\x82\xbe\t`\x07>\x18\xb7->1\x98K\xbfsa\x8a\xbd3b\xe6\xbfg\x81\x11?Q\x83*?\xb5 \x0f=kk\xc1\xbe\x80Us?\xfc\x9f\n?\xa8n\xe3\xbe\x82b\xb3\xbf\xe2\xa2\x8d\xbd5\x00\xe0\xbe\x01\xb5\xf5<\n\xee\x0b?(#P>}\xc0\x07\xbf\xbav\'>\xd2\xc3\xad\xbe\'Be\xbf\t\x13h\xbf\x9d\x96\xa5\xbe\xed\xf2\xb9\xbe\xb8\xbd\x04\xbf\xcbr\x83\xbe\xfe\xfd\x8e?<-|\xbe\xa1|\x0c\xbe\x14\xe8\x9c>u^\xe1\xbf\xc0\xb1A\xbfe\xe3S?\xe0<\x8b>\x11\xfb_\xbf6\x8d\xf5\xbe?4\x94>\x08PR>o\xeeu?W\xbb\x8e=\xcf\xee\x95>\xfbo\x96>\xb3\xbfx>\xec%\xfd\xbeL\x14\x84=[\xd3\x7f\xbf\xda\xb1\x86?adC\xbfU\x02>>\xfc\xe1\x16?:\xfdv\xbe\x8f\x85\xf3<G\xb2\xbb?\xb6\xf6\x16?\x93\xddw\xbe,\x06\xbb>\x00\xca\xd4>0\xdb\xa4?\xe6\x19\xb2\xbe\x81So\xbfjG\xf2\xbd\xf5\xc8\x83?s\xf9\x1c\xbegm\x00>\x0cxz>\xc4h`\xbfS@\x92\xbe])\xe8>\xe5I\x16?\xf7A/?]\x03Q\xbf\xdc\xba\xcf\xbeHe\xa5>\xda\xf7\xdb\xbe\x102\xbc\xbd\xdb+e\xbe>\xed-\xbe\xf0\x8d\x06?h\xb4\xe9\xbe\x99%\xbd\xbf\xcd\x07f\xbeg\x0e\xca\xbe_\xe1{\xbe\xd5 \xf8>\xb0\'k\xbb\x1d\xde\x07\xbe\x99\xa6\x9e>!~\x00\xbf\xb3JQ>\x1f\nH?\'F\xfe>E\xfb\x1b\xbf/IL?}=e\xbf8\x91\xe2?B\xc2h\xbeb\xe6\x86\xbcS3&?~\xc7\x1b\xbf\x86\xcd$?\xbc\xff\xcd>\xbd\xc6\\?\x8f\x9d\x12>=\x0e??b\xa1S>\xb50N?\x83\xfc\xf9\xbe\xce\x08{?\xc7=\xb7\xbf\xc0+\xcf=\xf7g\x1d?\xd4n\xd5\xbeU\x1eD?Y\x08\x12\xbf\xa6\xbb\x8a\xbf\x1c\xcfQ\xbf\x0f\xb5\xa1?\xd0/J>\x86\xc0_\xbf\x0fms?s\xa5\xdb\xbf"\xd6\xd4\xbf;\xef\xef\xbex\xd6\xe9>\x80$\xc0\xbev8\xc5?\xd5\xbe\xff\xbe_\x13\xf1\xbd\xdb\xf3!\xbf\x9d\x1e`>\x16/\x8b\xbe<C\xa7\xbc\xa5\xa8\xb0>-\x975=~\xdeE\xbe\'\xdf\n=\xa2\xdd+\xbf\xd6\xd7\xf5>\xd9\xff\xb7>p\xd0V?\xcd\'g>k\xef/\xbd\x036q=$\xa4r>x\x93\n?\x1f\xbdo\xbe\xac\xca[\xbe\x9f\xca\xfa\xbe\x8f\x88;\xbeg\xbc\x82\xbe=\xfd}\xbe\xef\xc2\xd5>\x11B\x98\xbeL2\x16>\xaf\x1b`>\x84\xf9\xa6?V\x98\xdb<\xd9\x1b\xf6>pY2\xbe\x1f\xe28?\xd2U\x91\xbeEO\xfc>\xe1]\xfb<\xf6\xcat=L\xf1\x02\xbf\xafv\xd5>\xcb\xc7\x02\xbf\x9a,\x0e>+\xfe\x85\xbe1\xd0\x19?\xbd\x01\x80\xbft\xf4V?c\x1d/\xbf\xf3\x87>\xbf\xd9\xb0F?s\x14\x1c?\x01\xbe\x17\xbe,\xaa\x17=`KM\xbd\x9d\x82\x91\xbf\xd2U\x0c>\x0eD*\xbc&\xd4\xbe\xbf&S6\xbe\x04\xb5\x16>\x88AH?O\xd1/>\xd5;\x16\xbf \x98q\xbf\xfc\x1d\x1a=\x98\x15\xfa>\x92no?\xd4\xe71\xc0\x07\xbf\xbb\xbc\xc8\xb2\xbc\xbe\x02\xce\x8b>\xc9\xd1\xb6\xbe\x81WQ<oZ\x1d\xbf%\xfb`\xbfu\x03\x01\xbf\xa5-g\xbe\xbb\x1b\x8e>\xa55\xd6\xbeI\xdc\xf7\xbc\xe8+/?e\x8d\x84<y\x9bS?\xdf\xbfw?@\xd1M\xbf\xc2\x88\x8d\xbe\xeam~\xbe\xa8\xefv\xbf\xf3\x85\xbc?h\xb4\x9d\xbe\x04L\xcf\xbdV\xa9M\xbfS\xe5\xfa\xbe\xe9\x9a\x19>)a\xff\xbd5\x87\x88\xbf\x07\x0fT\xbe\xd4\xe6\xe1\xbc\x8e\x17p\xbf\xf5\xb4+\xbe\xe2p)\xbf\x12(\x11?g\x9c\xb8?\\\xa3\xff>\xe1>"\xbfnI(\xbfn\xf0\xa8\xbe\xae\x18i\xbf\x06{\x08\xbfCL>\xbe\xf0\xe0M>\xd3U\xd1>E!\t\xbf\xde\x12\xd3>x^\x05\xbf\x81\xd4+?=\xaat>\xc2\xa8T\xbe^M\r\xbeB\x88\x8e\xbf\xdb\xd9\xd4>\xa8\x06\x8a?\x1d\xfd\xee\xbb"5\xdf\xbf\x0f\xc1\xd2>;\xbe\xcd>\xd3\x8cL\xbf\x10\xd8\xf7=*\x91\x7f\xbeKv\\\xbf+\xd7\xa4>\x1c\x0c\x0b\xbe\xf7y\xd1>\x86\x81o?\xbf\x98K\xbf\xb6\xd4\xb1\xbe?Q\x1a\xbfj\xf7\xa0>\x1f\x90\xf4\xbe\xa0\x82<\xbf\xa5>\xae\xbe\xde\xb26>fSp\xbf:I\x1b?\x1d|\xe1\xbe\xd6\xb1W\xbeS\x95\x05\xbf\xa52`?\xf0\xf2\xbc\xbeyb9\xbf\x13\xa7 \xbf\xe5\x88\xb1\xbf\x1b\x03\x07?\x9f\x0ce?e\xd2_?*>%\xbf\xc4i\xed\xbe\x85KJ\xbfaK;?\x04H9>\x9b\x82\x7f\xbfoh\xb0\xbd\xf2\x0f\xff\xbeDUh\xbe\xf2L\xe8>.\x0fI\xbf\xed[t\xbf\x90\x1a_>8\xf2\x81\xbe\x8f\x0f\x8e?F\x9f\x08?7\xd0\x84\xbe\xd6\xbe\xda\xbf\xce\xbb\x80>@\xb6\x17?\xbd\x0f\x95\xbea;\xb6>\xd2i\xf1>\x87p\xa0\xbf\x1b\x14\xac>E\xdf\x0f?\x8b\x82\xa1>\xdf7\xb3=.\xef\x14@\xad\x12\x8f=\x9a\x11\xb9>\x88\xe4\x9f?\xcc\x85\x9f\xbd\x89\xd3\x04>\xee,$A\x02\xb4\x15>F\x98\xc7?w\xc2L\xbeP,&\xc0\xb8\x10\xe0\xbd\'\xe3$?\x91\xcd\x97\xbf\xb7\xc6\xfa<I\xed]\xbe\xa7\xe9:?hN\xd0>P\xcf\x12?\x87u\x1a?o\xeb\xe6>{p\xa2?j\x8e\x96\xbf\xca\xb8K>\xf2\x1a\x96?\x0et\xd0\xbe\x81\x03g\xbfcG<\xbf\xcfs*\xbe\x0cZt<\xa91^?\x0c\x8c\xfd\xbd\xe1\x9c\xab>\xddh7<:\x02\xfc\xbfRD\xfe>\x91\x9d\xf0>y\xcb\xd8\xbe%\xbe\xf8>\xfc\xbc~\xbeR\xef-A\xe5_\xf6\xbe\x0c\x02(?\xf9\xd4\xdf<\xb8tj\xbf\x8b\x11l\xbf\xe85,>5>w\xbf\x19\x8a%\xbd\x1e\xf2!>\x0f\xda\x1e?\xf4\xb9^\xbf1-\x82?\xf9\xe5\xdc\xbe\x07\xf7\xa3\xbdf\xf1$?G\xc0\xb5;)\xd7\xd3\xbf\x02\xa6\xc2\xbe\x9d\x84\xf2\xbe\xc6\x04\xf1\xbf,04=\xce\xb7_\xbf+\xb9\xa0\xbf^(\x8d\xbd\xe4\x02Z\xbf\x9c\xaa\x85?>K\x08?P5[=\x9e?\x7f\xbf\xbdn\x96\xbe\x1c\xc8R\xbe\x1c\xf1\x06?\x8d{\x8a>7"\xff\xbe\x94I3>\xc1$\xb2\xbf\x91\x9a\x1c?\xdeD\x0c?\xbb)\x8e>\xe9wV\xbeO\xcb\x90\xbdi\xe3q?\x0f\xfa\xa7\xbf*\xf8;\xbe\xe4\x93\x1b?8\x9f=?"\x1e\xfb>\x94e\x96\xbeO\x9b.?\xd8\xb7\xb5>\xd4\x1d\xec\xbez\x1f\xb8?\x8dL[\xbf\x9c\\\xe0>O\xd0\x17\xbf\xc6\xcb\x95=8\x05\xa9\xbbS\x01\x88\xbe\x13\x8bE\xbf2v\xee>?;~\xbe3\x8a\xe9\xbe\xc8\xadW\xbf\xd0\x17\xed\xbe\'\xbbB?(<w>\xb4CO>\x99W<\xbe\xac\x9e\x90=}\xcb`\xbf\xc7\xb5\x81\xbf\xcf\xe9\x95\xbc\x97D>\xbf\x0c\x94\xb2>\xcd\xc0\x16?}\x9f\x15?K\x11\xde>>\x84W\xbf\xbf\x05/>P\x91\xef?k\x0f4?\xcc\xc1P?\xadh\xb5\xbe9\x1c\xea\xbdX\x1f\x1d\xbe\xcb\x85\xa6\xbe\x9bm\xa0?\x9c\n|>C\xa1\xb5\xbf\xf5\x12\x07\xbf\xbb\x00\xfe;\xdfDO\xbfY\x00\xb2\xbdP\xc3\xc6\xbf\xfaW\xa1>U\x16)\xbf\x8aR"\xbd\xbf&W?\xe7=\t@\x11*\x06\xbf\x92\xf5\xe9\xbe0\xcf\xdf\xbe\xb2`v?:5\xc1=~\x98C<\xba\xca\x9a\xbeL\xf2*?`\xbc\xdc\xbe\xc3\x0c\x14?\xfcQ\xcb\xbd\x01\x11\xa3?\xb8\x88?=iF\xb7=\x89\xc2s?\x15\xfc\xbb\xbc\xd2\xd3r:7\xf5\xa8\xbd\x91\x86\xad\xbe\xa7\xcf\r\xbd?\x01\x8b?\xd3\xde<\xbe)L\x89\xbdoe\xa8?\xdc0\xde\xbd\xfe\x91\x9e\xbf/\xba\xf6\xbf\x1b\xb1&=\xa0\xaf\xf0=\xd7\x90\xdd>\x9eF\xfc\xbeO\xc8\x89\xbf\xd8\xd4$>\xf7\xfe3?\xa1m\xfd>vM\xa1?\xca\xa1\xa6?\xe7.\x88?\xfa\xc8\x85>\xbc\\\xa2=\xfd\x86\xcb=\xc5n8\xbf+\xd1\x89\xbf\x96O9>B\xb8\xd9?\xdb\xf2\xf4>\x10\xb6\x1b\xbeo\xad\xd6\xbd\xd4>\x92>\xbd\xa6A?R$\xba>H\x06\x15?\xce\xd0\x01\xbfVb\x01\xbej\xd7\xc6\xbf\x10\x0b{Az\xfd\xb4A\x08*K?\xf5\x7f\xd9\xbe9;\xc1\xbc\xfe)~>\x1f\xd3b?`\xf5\xd3\xbe[c\xb8>\xfbl\x16?)\xd8\x81?\xa9\xa4\xe8>\x0cS\x7f>\x1d\x11\x87>\x93lF\xbf\xda\xd8)@\xca}\x94\xbf1\x8e\x85\xbf^\tZ>\xa9\xad\xee\xc0v\xdb$\xbf-mh>\xb8\xf6\x7f\xbe\x9e\x17\x81\xbei\xc7C\xc07\x8a\x82?\x85I\t?H\xf4\xa7\xbe\xdf\x1f@\xc0\xe8\xcfE\xbd\xe0\xcbK?\xc7W\xbb?\x04\xc1\xf8\xbe`\xf2\x8c\xbfY\xa6\x88A\xb5\xbf\x87?\xf8\xaa\x95\xbf\x1c\xf8\x9a?#\x9b\x86\xbf\x82O\x81>v\x1dr>\xf1\xfe-\xbfK\xe4\xc8\xbc\xe4\xd9\xc2\xbd\xb9*\xd4?\x03\x04I\xbf\xcf\xa2\xd9\xbe$\x98o\xbf\x07\x11v>\xdf\x9f\xbb\xbeJ\x07\x04=\x1c\xe1C\xc0`\x94\x0e<&Y[\xbe,\x1e\xa6\xbe\xb7\xa9\x8b\xbfh(\'?r?~?z\xf7\xb1\xbe\xd2+N>=\xecC>\xeb}\t?\x16e\xa8=\xf3\xd3\xc7\xbfv\x01\x00\xc0\x90\x8dM?\x9c\xd5\xbd=\x07\x89\x1c\xc0\xb3\xadO=\xe1\xaa\xe1\xbbjtt\xbf_\x17\x90>\x83\xcd\x9a\xbf\xe3&.?\x8a\xcc\xd3?\xbe-\x8c>v8\x80\xbel\xcc\xb7=\x16sS\xbf*\x96\xbb>\x8d\xbb\xc4\xbel\xb3\xd1>6Z\x82?$&\x1f\xbe\x95\x8a\x01>_\xb6\x8c\xbe\xf7i\xbd\xbe\xfe\xb2\x87@\x9d\xa5.\xbfZ3\x80\xbe\x8ar\x0f\xbf\r\xc2\xd0? \x8f\xc4\xbe\xe8\xf3\xbd\xbfa\x1aQ\xbe\xb5B\xc3?Y\xe5\xf8@V\xa8\xd7\xbf\x93v\xf2\xbfj\x8d\xe1>A=\xff\xbf]\x16-?\x0en\x05\xbf\x83\xb9#\xbf\xf0l\xc4\xben\xc1\xf3\xbf\x97\xdfa>\xc8+\xf8\xbf\xb6\xbf\xb6\xbe~\xe6\x8b\xbd\xc9\x11\xa0\xbe\xd5\x88\x0c\xbf\x03\x8d\xcb\xbd4\xcf\xc7\xbd\xfb1\xe0?9\xe2\x9e\xbe\x17\xb6\x1c\xbf\x82\xc3\x80\xbf\x89\xd2\x9f\xbe\xff\xe8\x9c>\x10(\x11\xbf\x1aD\x10>\xd8\x1a\x1c?\x88<\xfa\xbfh\xf1F\xbft\xa4\xf3\xbe\xf3/z\xbf*\xfeC\xc0N:\xc8\xbf\x0cn[>/\xd3\xc5>\x14\xa5\xcd\xbf`i\xe1>\x9c\xb0L@\xff)\x12\xbf\xa9n\x14\xbf\xcd\xf0\xaa\xbfz\xd4\xbc\xbf\x93\xda)\xbf\xd6\x1f\x1b\xbf\x0e\x8d\x17\xbe\xee\xca\xd0\xbf\xd8\x9f\xd7\xbeU\xd4\x14?Q\xab\x06\xbc\xd6\x15j?f\x86\x98\xbe\xb0f\xb0>\x8c\x1c\xfa\xbe\xd3\xb9Y\xbe!W\x9b>\xa4\xbb/>\xe9\xab^\xbf\xd4\x8bD\xbf\xc9~\x83\xbf\xab\xae\n\xbd7\xbd\xc1<b\'\xcd?{tz\xbe\xc9\xbb\xbf\xbe\xe0f\x05\xbf\\\xcb{?}\x07z?)\x97N>\x13v\x99\xbdv\x92\xc2\xbf\xfc\xbb\x9c\xbc\xaeU\x99\xbf\x06P\xda=\xa3W\x17?>\xc9B\xbf\xe1\xa8\x80\xbe\xc7j*>N\x0f}?\xee{\x81?.dm?\xcf\xa4\x0b=:\x93P\xbe\x90\xc0r?\xdca\x98>\xb5\xce\t>d\x16p?\xfa|\xdc<\x10\xddg\xbebF\x07\xbf\xfe\xe5\x9c><\x8b\xe2\xbeH[\x96=\xb4\x0b\x16>+HOA5+\xa5\xbe\xd46\x1d?\xb0\x8a\x80\xbf\xd6[\\>\x93\x91\xf8\xbeS\xe5\xba?\xc0\xfc/\xbf\xff\xf4}>\xf1\xbbC?~\x8fj?\x07,\xef=m\xe0\'\xbfq\xc9\x17>Z\xfb6\xbfB\x9c\xbf\xbe\xe0>\xb5<\xae\x06\x80\xbf\xe0\x9c\xe5>S\x8fr\xbf\x99\xd2\x9e\xbeb|\x98=\r\xda\x84\xbe{\xd0\xd7>\x92Z\x10\xc0\xa9\xdf\xad>\xe8HP\xbeX\xc0\xb7>\x1a.\x96?\x14\xf5\x10\xbfL\x15\xfc\xbe\xdf0\xe0=\xdaE\x1d>\xf2\x84~\xbf{\xf8KAM\xdb\n?\x07\x86\xd4\xbeM{\x90\xbdJ\xad\xe2=:_q?\xf17\x9f<\x02Z\xa9>\xf4X\xbd=\x9c\xff\x9b\xbe\xe5\xa3\x83\xbfV\xd2f\xbf\xd0Q\x03\xbe\x9e\x8fM\xbf]\xb0\x8b\xbd\xf7\xdf\xfd\xbd;\xf59=\xc3w\xb8\xbeS\xb4\xdb\xbeq\x02\xad?\xd8\x07\xa7\xbe\xd4\x9a\x17?\xed2\xc7>\xf12\x89>\xfb\xb3\x81>\xb0\x03g=\xe5\xcb\x9d=\xdd\xaf\t\xbf\xd3_^\xbfa\x97\xa0\xbf\x9a\x16>?\x08\x06\xd7\xbe\x16\x96\xa9\xbe\xd96[\xc0\x02\xe3A?<\xee\xe7\xbe\xa5Z\x06\xbf\x1f@9?\x94\xac\x13\xbf\x1a(\xe5\xbf\xa2\xe8\n\xbf\xc0q3\xbf\xd4\x8f>?\xffz\x8a\xbf\x8d\x18*@d\x01\x0c\xbf\x13qZ\xbfnd\xd9>\xec!7?\x99\xe8\xd1\xbe\xc9\xb2\xb2>\xcd4\xd0>\x04S\xcb\xbe(\x05\\?\x19i&>x@\xa3?\x94\xdfz>\xbf[#\xbfj\t\xa3?A\xe7\xda>\x81<\xb4\xb9lrR?\xa2\xe3u@g\x85\x17\xbf\xf7\x05\x04?\x93\xa0\x1a\xbc\xa3\xac\x9f<\xa9\xaaK=\xda\x8c\xdb=\xa8\xb1]\xbf\x81\x08m>\xfa\xc0V>\x136\x06?\xee\xb0\x86>W\xf2\x92=\xe7t\xed>\xf2\xa4I\xbf\xe4\x8e\xb1\xbf\x1d\xfa\xdb\xbd\xd2\xc1\xb0\xbe8\xd0D\xbf\x832\xdb>\x15 \xb5>\x8a\xee/?\x01? \xbf\xe7\xc7m?\x14"U>q\xb9<?F\x06\xc2>\xc6)\xc1\xbf\x82t\xde\xbe\x92\xa5r\xbe,\x03\xd3\xbf\x8b\xc4\xb9?U\xfe\x15\xbfx7\x06\xbe\xc7\xfe5?\xcb\xeb=>\xf1\xf4\xcb\xbf\t\xf6\xb1?\xf0]d\xbe|[\xcb\xbe\x06\xd9\xac?\x14\xb4L\xbf,\xbb^\xbfc\xcev\xbf\x16\xf5P<\x00W>>\xc46E\xbc\xf9\xee\x8e?\xcb\x804?\x16\r\xed\xbf\x15\x0f\xee;\xf6\xfa\x16?\xd8N\xe8\xbd\x0e*\x8e\xbf9\xf68\xbfE\x81\xd8=}\xa9\xfd\xbfG\xec\x16\xbfK=6\xbe\xb7\xeb\x94\xbe\xea\xbcJ?\xb9\x1f\xc9?YO\xa3>\xba\xe9\x0c\xbf\x9d\xee\xf5\xbe\'\xda\x06\xbey>\x0f?\xc5s\x16>\x02)\xa2\xbf-\t\x01\xbf\xae\xa0n\xbe\xd4\x8eo\xbf\x0fR\xaa\xbe\xea47\xbfw\xbc\x0b\xbf\xaf\xbd\xcc=_\xb8\x19?-g.?\x1ec\x1d?\xa4\xabP?\x95\x8f\xb4>,:\xdd\xbe8\xfd:?P/\x01>l\xaf1\xbe@\xed\xb8\xbd0\x7f\x11?\xb0a\x04\xbd$\x82\x1a>^3;>]\xd0\xf9\xbeM\x9dm\xbf\x98\xa3W>\x9e\x9c\x90?\xc7+\xad\xbd-\x17;\xbf\x91|\x92\xbe\xee\x16\xf6>\xc2\n\x9c>Q\x18\x81?\\`a\xbe\x84\x9c\xd3\xbe5\x89\x8d>\xae\x81a\xbf\xe5\xb1c\xbe\x92~H>\x05\xc4\xc5>\x98\xb9\x83>\x869\xfe\xbf\xaf\xcf\x8d\xbez\xb7\xe3\xbe<\xdc\xcd>\x9bA|\xbf\xda\xf31\xbfF\x0e]\xbf\xc3\x17u\xbeC\xa8"\xbd\xeb\xd3#?L\x18\xad>\x13\xe3\x17\xbf\x1f\xba\xaa>\xa3\x9b\x95\xbb`\x05Q\xbf\x81\xe7]\xbf\x00\xa2\x84>\xf22\x10\xbf\x01\xb4I\xbf\xb2\xd5\x12@\'\xdd\x02\xbe\xdbD\x0f?\xf4\xe3[?y\xd8\x18\xbf\xef\xea\xb2>,0T\xbeD\xcdB?\xe1\x14\xaf\xbelO\x16\xbf\x1b\x99\xab\xbe\x9b2\x1e\xbf\x96Xn\xbe\x0fQ\x00\xc0\xdbZ5?\x14\x9b\x8c>\x86\xbc?>\x01\xa7R\xbf*\xc4\x84>\x89lN?n\t1\xbfrYb?\x1d(\x00?\xc6qe?\xe7\xc0>?\xbc\xa7\xb5>\xb3\xf7\\?\x8f\xe91\xbfP\xb3\xac=\x91\x93S?\x8fh\x8a>\x0c\x89\xf7\xbet\xc0\x1d\xbfc\x9c\x82\xc0\x93z/\xbf\x15I\x8c?\x02<\x07\xbf\xd0h"\xbf\xf6P`\xbf\xef\x077\xbe\xcf\xbf\xaa\xbe5k\x1a>(^\xe6\xbe\x08Q\xeb>&us@6\xa7f\xbf\x8f{\x92\xbf\x10\x83\xe2>\xc8\xca\xa4\xbf\x85\xdbW\xbf/\xed\xc6>T\\\xb5\xbd.\x10\xbc\xbe[\xd6\x80\xbf2I\x01\xbf\x93N1\xbd\x13\x08)=\x08+\xc3\xbd[C~?{_\x0b?\xc7\x0c\xe7\xbe_I]>\xa9\xc7\xd1?=\x1c\xb2\xbe\x12W ?x 6\xbf\xdf\x89+\xbeC\x93\x08?\xb6\x89\x87\xbe\xec\xca0\xc0\xd1\'\xc4?Nd:>\xbe\x8a\xd6>\xfeG\xdc=\x8b2\xd5=\xe2\na?\xa7\xe6`\xbeV/=\xbf\x85p,\xbf\xc7&I?\xc0\xb2\x00\xbf\xcb\xc3c=\xdf\xc0\xd7\xbd\xa7[\xaf>\xab\x07\x04?\x8a\xca^\xbe#\xd0|?\xbc\x0c\xf3>\xff\xf8\x15\xbc\x1c\x8f(\xbfhv\xfe?\xcd\xac\x07?{\xe6_?\xde\xeb\x8b=\x16\xa2x\xbe\xdc\xe1;?\xe2\xd6!?\x02\xb6\xef\xbe@B\xda\xbcx\'G?w\xect\xbeQa\x9d\xbf\xfa?\xb8>\x8c\xc9\x7f\xbf \xde\xa3>\x00i\xc9\xbd?T\x9a?{\xf2_?p\x1b\n\xbf\xf0\x9a\x9d\xbf\x02h\xef>\x04\x84\x9c=\x86NV>*\x18\x91>\x10q7=8\xd8k\xbe\x02R\x80\xbeiY3\xbe\x88\xadH=JO<\xbfgg\xf6\xbe\xbbt\xed>\xf1\xe7\xc3>\xd6\xb2\xea>%\xc5g?{\x1f\x15\xbfA\x9d >\x9c\xee\xfe\xbev\x84\x85\xbfvHq\xbf[\xd2\xdb\xbdy\xe1U\xbf?\x9cR;\xb8)\x86\xbf4\xd41?\xe1\x88+?-\x88\xae;\xcf%\xe3\xbeQ\xc4\xa2\xbd\xe2j\x7f?\xb8\x8d\x0e?\xcfi\xd1>sG\xbb\xbe\x99\xf0\xa8\xbd2\x99\x1f\xbeV\xabO\xbf\xf5)\xb0\xbe\xba>Y\xbf%\xa4M>i\x04D\xbe\n\x89\x07\xbfA\x858\xbe\xc5\xf8\xc0>,\x85\xfd=\xfa\xfb\x81\xbf_I\xc6>\xcc\xb7\x16\xbeP[\xec\xbeA\xb7\x0f\xbe\xd8\x03u=_\xb3\xa4\xbe\x8a!\xf0\xbd\xf5\x08\x00>>\x00\xe4>l&3?\x7fz\t\xbfI\x01\x00\xbf\x18\x18\xd9\xbd5\xb5\n\xbe\n8\xd6\xbekZ(\xbf\xa2\xae->^&"\xbf\xdbZ\xa3>\xec`\xe2\xbd9c!?5\x9a\x1f?\xfc0\x00\xbf\xac\xd6\xbc=\x00\x91\xe0\xbcZ\x13\xeb\xbe\xeaF3?\xf7\xd0\xc0=Q\xbe=>\xacg{\xbeO$q\xbe}\xdc$\xbe\xa7\x1e\x1f>\x8b\x8dN\xbe\xda\xa6\xc3\xbe\x92P\xde>\x13G\xf5=\x0c\xc3%\xbf\x84A\x9e\xbd\xad\x04\x17\xbf<\x17\xc8=\x02\x9e\xa4>\x18\x9e\xc6>\xbae\x95?\r\x19\x1d>^x@\xbdA\x17\x91\xbaR\xbc{\xbf\x15\xae`?\xdf\x03Z>\xf2u\x9b\xbf\xc1\xf4\xd5\xbe<N\xec>qU\x91\xbe\x0b\x14(\xbf\xec\xe3\x83?ND\xda\xbe\x8dgx\xbe\x94\x02\x93\xbe)\xc9W?o\xe9\xab>\x98\xa6\xb2\xbd\x946\xd6>\x0e\nM?xD\x18\xbe\xc7\xdf\xc1>7\x95G\xbe\xf2\x91(\xc0\xe9@H\xbf\'\x82;@\xfa\xd9\x00?\x17aT?\xba\x81_\xbf\xcc\x8d\xb9\xbc\xb8)\xc4>\x99\xcb\x16?\xcb\xe9+\xbf$\x0bx<\x893\xce?V\xa5-\xbf\xefc&?U\xda\xa1>~\x85\xd2=k\x962\xbf\x0b\x06-\xbf7\xe6%\xbe\xb4\x005\xbf\x00\xe8\xa6\xbe\xd2\xb4\x18=tad?\x1c\x98j\xbf:f\xab\xbe\xd9X\x12?\x93xR\xbfd\xc7i>\x04\x0e\xd3>?\rZ@x\x163>\x00^\x97>\xf3\xdd\xbe\xbc\xc6\xdd3>\x9a_b?_\xed\x8f\xbe\xbb\xf4F\xc0NTi>\xe8\x862\xbf]=X?\xf9\x00\xaa\xbe\xbb%J\xbd_\x1d<?#\x92\xdb>\xcf\xe6\xaf\xbc\xa7\x05\x9b\xbe?+\xe2\xbdp{\xe2\xbd\x03##\xbf\xc7\x1bv\xbe\xe5\xc5\x0f\xbf>.\x18<\xaaM\xa3>\xd2i\xe1>bSM\xbfC\xb9I\xbf\xbc\xf9\xee=\x0e\x05\x00@\x99\xc9\x1a?\xba\xd2C?\xbf\x15\xba\xbd{\x94l?\x95{^\xbfq\xd17?\xcb\xf4\xe1>\xb3d\x05>\xed\xece\xbe\xa0\x05\xcf\xbe\xdb9\x7f\xbe\xb3\xcc\x82\xbel\xab7\xbf\xb30\xae>\xa0\xddF\xbf;8\x86\xbeLEA?\xdc\xb3\xc3>\xedU\xf4\xbf\xaa%,?\xd9g\r\xbe{\xf9\xf4>\xdaQ\x7f\xbf\x98:\xed\xbd*!\x80\xbfG\x91\x04\xbf+\xce\xa0>\x80\xa3>\xbe\xc0\xe9\x89\xbf\x99\xf7\xd5\xbe\x07N>\xbe!\xa4\xc3>_\x0b\xcc\xbe7\xb3\xc6>\x9b\xaaL\xbf\n\'\xcd=\x11\x138\xbf\xf5\x0b|\xbf\xbd\xad\xfd>[\x06\xce\xbf\x19\\\xd7\xbed@\x88=\xbc\x81\x7f\xbeJ\x90l\xbd\xf0\x02G\xbf\xe5\x15\xe8\xbdl\xe9\x97\xbc\xf2\xab\xdf\xbd\x9d\x1f\xeb\xbe\n\xd8\x0b\xbf_\x97\x02\xbf\xce\x05\x87\xbe\xefG!>|\x05\xa8\xbe\x06\x88\x94\xbb6\xab\xe5=\xc2]\xcb\xbf{\xe2\\>\x10y\xee=O\\$\xbe\x05\x97 \xbf\x97\x95]\xbe\xa2P^\xbf\xd7\xcd\xa6\xbe\x8e\xdc\x9e>9\xe5\x8e>\xfeI_\xbe\xb0\\G=\x07,k>\xae\xb1T\xbe\xce\r\xe7\xbe+\x91 ?\x9fl\xa0\xbf\x02.\x9c>\x94\x91w\xbf~\x032\xbfL\x85(\xbd\xd0}\x8b;u\xd1\x93>T\xed)\xbf1\xf4\x0e\xbd\x16\x08\xaa\xbe\xa54\xed>\xc4b!>\xf7C\x80>\xf1\xfbJ?\xe1\xd1~\xbf\xb0\xb9\x12?\xdf\xd9\xd0\xbeJ\xd0&\xbf\xcc\xa4\x9b?:\xe8K?\xc4\xee\x15\xbe%\xa8\xa5\xbe\x88\x11\xe7>1\xa2\xde\xbe=Tq\xbe\x86\xfdh>\x1f\xb48>\xe8\xc9\x02\xbf\t\xc9~?\x1e\xc0\xb1\xbd\xb3FQ=\x12\xc8\t\xbfKc\x90>\xd3`\x82>\xd4\xb4+\xbf\x03\x89k\xbe\x06\xf3\xfb\xbe_\\\xcd>/\xb0\xdc>\x87\xca\xc1\xbf\x16\r\xda>i\xe0\x04?\xb0\xdf%\xbe;\x7f\x05\xbd\xab\xa8\xd6\xbe\xb5\xc2\x8c=\xd2\xf3\x90\xbd-\xa6\xa7?\xd7\x0b>>S8]>\x98;\x1f={l ?\x84Y\xec\xbe\x04b \xbf\x86\xde \xbe\xb0\xf6\x16>c.\xe3>\xbc\xf6\x16?4\xceO?\xa4k\xde\xbee\xb2)?\xa9\x90)@\xff^\xea=n\x00\xac\xbekA\x00\xbf\xba1\x1d\xbf\xd9)\xf4\xbd\xed\x1az>\x16R>?\xf1\x83\x9b?h\x8f\xa7?va\xa9=\x16\xb1\x95>\xec\x86\xcd>\xc4:\xfb\xbe\xca\x8a\n\xbfjE\x01\xbf.\x1d\xa7\xbe\'\xb0\x8e\xbe\xe0G\xdd\xbe\xf1\xcd}=\x98)^>zT\xb8\xbe\x00v\xf4\xbe)\x85\x06\xbf\xd2\xe9\t\xbf\x9a4\n\xbe%\xc1\xfe>\x89\xdd*\xbdA\'\xa9=\xb3pr\xbe\xd3\x01n><G\x04\xbd\xa9 U>\x16\xc6\xb1\xbe\xf2D8\xbf\xbc\xad\x93=\x86J\x1d\xbd\xde\x81=\xbf2\x86\xcd\xbe\x93l\x03?u\x7f\x80?\x8b@\xfc\xbe\xfa\xd2\x8b\xbe\xee\xa1z>\x98\xb8\xe7\xbeS\xa9J\xbe9?m\xbf\x02\xf1\xec\xbe`\xd7\xd6<c\x16\xb0?T\x95;>\xc5\xa3\x0e?M\xe8\x05>\x8b]\xce\xbe\xbbk\xef>\x94\x07\xbc=\\\x83\xc1>\xfd*\x13?[\xe5P>\x19\x0e\x0b<N+\x0e\xbdZ\x04{>\xa4\n\x03?:7\x1e?$\x1d\xb7=\x01P^\xbf\'\xd89\xbf\xa9\xd0V>\xec \x0c?R\xf9\xae>\xd4\x16\xcc>l\x81\x97\xbe\x16\t\x02\xbfL\xb4\xbc\xbeP+b\xbf\xad\xcd@\xbe\xfa\x98\x08?P\xc0\xfe>e!\x1e?raK?\xe9\xf6\xff\xbe\xc4\xd9\xe9\xbe\xf5z\xf0=\xb6\xb3\xdd>\x0f\xd9\x0b\xbf\xc6\x11\xf8\xbe\xc3\xac\xc1\xbe>S\xe7\xbe\xe2\x97\xb2;\xe8\\\xe1>\xb2\xbfu?\x0b\xa1R?r]9\xbfaJE>\xf5\x00N>\x9bCx\xbe\xdc\x1e\xc1\xbd\x1d\x9db\xbf\xf1\x91X>)\x1d\xeb\xbe\xca\xbd\xa1>\xccFJ\xbePM\xa0\xbd\xf4\xcc\x9b\xbe\x1f \x05?Q\x84\xd7\xbe\nb\xca>k\xf9 \xbf\xe4\xd1r\xbc\x0bZ~=1n\t?k\xe1\x7f>\xafi\x8e\xbf\xb2\xa5K\xbfu\xb7\x00\xbd4\xcd\xb0\xbe0\xdfl\xbf\xec\x1d\x03\xbfX~E?\xaciq\xbf\x00&@\xbe\xe5SG?]4&\xbc~\xb8#?\xb8\x1f[=P\xbc\x82\xbe\xdd\x87\x81\xbfO\xa0\x03>\xba\xb5<\xbf\x80\xc4\n?\x81 T\xbf\\7~\xbe\xa1\x920?\xd9\xc9t>\xd9\xe7(?_z)??$\x95\xbd_-\xb4\xbd\xbc\xaa\xd8\xbemM|>6\xe2\xf6\xbe\xa7\xb9\x97>7\t\x80\xbfC\xebs>\x0by\x82\xbe\xaa\xf8\xae>\xe5GM?nu{?\xef\xff\n\xbf\n\xd0\xec\xbek\xad\n>\xc4\x7fU\xbe\xcd\xc8\x9a>\xf81\xfb=`\xfc\xa2?-\xc1\x99\xbec3\x80?\xff\xbe\x88\xbd\xef6\xa5\xbd\xe0S\xca\xbe\xbbf\xf9>k\t)>\xad\x04$\xbf<.\x97>n\x14\x08\xbf\x96\xcc\xee>\x9d\xc5\xca?\xec\rz\xbf\x8e\x10b?f\n\x02>\xde\xde\xc4\xbe\xf4\xca\xaf>\x04"\xda\xbdYi\xa8>\x8f\x91\x8e;\xa9\xf8\x7f?B\xa2\x12?>\x10\x8b>\xb2Q\xb4\xbd\x89\xe6~\xbd*\x9d\x01?\xbbu\x8f>{\\\x7f\xbe\xba}e>v\xe0\x08?"\x9a\xcc>b\xfd\x14<h)\xd6>u\xd19\xbf\x9d\xbc\xf8>\xd0?\x12>\xf3\xdc\xde>$\xc4\xd9\xbe\xbdl\xba=1\x00#\xbf\x9f\x1c/>]\xbd\xad\xbe\xcf\x1fd\xbe\xe0r$\xbe\xe4t\x81\xbe\xb5N\xd1\xbd\xba4X\xbfa\x82\x02?\x19\xc9\xba>X\xf6%>j,[\xbe\xe8\x89|\xbf\xb1^\x81\xbez\x17\xb6=\x17T\xf5\xbd\xb6\x84\xf8\xbd\xae\x7fc\xbe\xf0\x0e\xd1\xbe\x0f\xdd\n>S\xd9\xf8>z r?\xcc\xd6\xbe=\xee48?\xfeN+\xbfxh9>\x08\xcd\xfa>\xc2f\x01?\xc3V_\xbe\x7fb\xa1=D\x16?>d\xaa\x7f\xbf\xb5\xc6\xd7\xbd\xb3\xca\xdb=\x1a@\x00\xbe\x97T\xf5\xbc\xa5A\xb9>\x8c6b\xbf\x8bF\xad=sfw>/C\t\xbf\xab\x1c\r\xbf\t\x1a\x8f=\x1bbY=u\xba\x96?1\xc7\x07>\xbfN\xd6>\xba"Y\xbfv3\xcc\xbfD\x1c\x1c\xbf\x13#\xbd?/\xc5\x1e?\xbb\xf7c\xbdA\x8e\xdc>\xf0\x02\xfe\xbe\xe4\xfc\x91\xbd\xdd\x0b\xbf\xbe\x0e(\x9d>\xf52\xc6\xbe\x91\x15\xae><\xfc\xda\xbe\x93\x87\x94=\x93c\x84\xbeL\x10\xff\xbe\xc3\xe7\x00?\xf6>\x17\xbe\x8b\xd0\x7f\xbf#)}>t\xb3\xa9\xbe\x88-H\xbe\x92\x8fo=\xcb7\xe8\xbe\xfb\xc1b\xbeH\xda\xf3>S\xcd\xc6>A\xe8\xae\xbe\x18\x8d\x02?-c+>\x99d\x00>\xd3\x1e\x1b\xbf\xf6S\x96\xbel=\x96>h\xe2G>O\xe1\x8f>\x9f\xe6!> 1\xd1\xbe\xe2\xf9\x9d>\t\xa4)?}qz\xbf\x1d\x84\x80>:\\\x10\xbe"\xf1$>\xf2\x17{\xbf\xdde\x1c\xbfo\x85\x8a\xbe\x9c\xa5\xc3\xbe\xdc\xc1\xa0\xbd\xc6\x82S\xbf\x7f7\xd6=\xe7\xb7\xaa>\xba\xa4Z>^z\x0c\xbft\x015?\xf1\n\x8d\xbd\x0b)\xb2<\xfb\xf9\x9e>G\xc67\xbf*\x80\x19\xbf\xa7\xd1\xe3>\xdas\xd2>\xb6t\xf9>\xf5b\xd6;\xe0\xce\xcc\xbe7\xcfT\xbe\xe0\xe2\xc4>\x95\x9b\xa6\xbe(\xfb\xd9\xbdR\x86\x8e>zW\xf7\xbdg\x84\x86>(\x1b\x88\xbeL2\x9c=\x86#\xf3=\x86\xe3y\xbe\xe5\x80K?\xec\r\xe8\xbd\x84H\xa2>\xa6\xfb\x82\xbe\x831\x9a\xbea\xe4\xbc>E%\x07?\xd8z\x16\xbf\x0c\xe8[?\xc7KC>\xbf\x14#\xbf5\xea\xf5:Y\xd7<<+mU\xbf\xcbh\x0f?3\xc0[>\xb3:\xb2\xbd%\x8f3\xbex\xb1E?\x9e}\x01\xbfm\xd0\x15?\xd05\x06>\x94\x89u\xbf\xd9F^>\x85c\x1e=\xf3\xca:\xbd\x9fS\x8f>\xd86\'\xbf8bG\xbf\xc1\x8d\x19\xbf-\xc9\x94\xbez\x8c\xfa>\xa7\x042\xbe\xe6\r\x01?\x04\x13\x8a\xbeV"\x7f\xbe\x90=\x10\xbfhB\x0b?\x01\x17\xac\xbf"\xff\x19\xbf\xe2K\xef>y\xb6\x11?\xa4\x96\x83>LZ\xae\xbe\xbc5-=\x02y \xbf\xe0^\x80\xbcw\xddP?]\xea\x9a>\x93\xa3!\xbe?\xf2M?\x91v\xe8=\x9dR\x0b\xbf\xaa\x84V\xbf\xf7\xce\'>\x85\xf4\xf7\xbe\x1bY\x02?\xbb\xc4\xc9\xbe\x99"H\xbf\xacm\xfc\xbeP\xcc$?0\x83\x03>\xa8\xcc#?\x12\xf7w>\x02\xf62>FD\xd3\xbe\x8f\x1c\xc3\xbepD\x08\xbf\x1f\xa0\xa0?v5\xa0>\xa4S\x86\xbeh\xb4\xc7>\x8cJ\x99\xbd\xd1\xe2\xdf\xbd\x9f\xff\xf2<\x17>\xfc>6\xba\x9b\xbeaa\x9a>\x10w\xe5>\x90\'\xf1>\xb5\xfd\x14\xbf\xf50\xd2\xbe\x11\x8c\xe9\xbe\xf6\x87\xde>)\x03>\xbb\xbe\xd8\xf1>\xc9\xb0i=-+\xda\xbe\xa0i\x93>\x8c\xfbc\xbfZN\x04\xbfm\xa69>\x94.\x07?\xeb\x9e\x88\xbd\xb4\xb1\xd7\xbep0\x0e\xbf)\xa2\x06>\x93\xd1n\xbe\xb2\xdc\x9c>\xf7A\x1b\xbf\xa5\xec\x9f\xbdpp\x85>\xebT\x0c?\xef\xdb\xf1>\xf3[\x05?\x86\x9f\xfa\xbe0k\xb2\xbe@4]>\xd2\x11E\xbf\xc8\x9f\xb1\xbe\x00+R\xbe\x1d\x08B>H\xb8H>\x1e\xae\x9c\xbf\xd2\x85\xf7\xbe\xe7\x08Y?;Cu?\xe5@d\xbem\x8da\xbe-c\x06?v\xd4\xde\xbe_:^\xbd\xee\x0f*\xbf\x16\xa9:\xbf\xf1 \xa8>\xe7:\xd3\xbe\x00\xd7\xec>\xdb$\xa4\xbe\x07\x1a\x13\xbe\x1c\xd7\xc9=.r\x13=\xa2\x82\xec=\xd9$f?\x83\xf2)\xbf\x98.\x8d\xbe\x84NL>\x08\x85\x99\xbe\xde4\x01?X\x18\x93\xbf\x05W\x8a\xbd\xfadX>\xe8W\x04\xbfJE\xfc;\xfc\x1f\x00\xbf\xcc\xdf\x05\xbf\x05\xf4>\xbe\x03\x18\xae?\xb1\x8a\xdb>\xcb\x7f\x1a?\xad\x001\xbe\x99\xfa\x98?\x80\xb1w?\xca\x1aK>^\x01\xff\xbe\xcb{\x90=ny\xe0\xbf!\xd4\xa5\xbd\x82\x0b\xa7\xbe\x97K\xfe>/,n\xbe0\xab\x13\xbf\xacQ\x06>\xbfP\xb4\xbe\xf7\x188?\x91J\x11\xbf\x9f\xd1D=D\x0e|>\xb9a\x8d>\xdb\x8e\x84\xbe\xcd\xf8\xad\xbe\\0\xe9\xbd\xd1|\xb1\xbe\xc3\xce\xf5\xbe\x19U\xd9>?\x9f\xec=?\x15\x92\xbf`\xe0\xad>7\x17\x99\xbe\xc2ym\xbf\xbf\xbf\r?#\xea\xf9>*\xbb\xc4<\xff\x8b\xb3>.\xd12\xbe^\xfe\x8c>\x1b\xb9\x8c>\xd5e\x1d\xbf\x85\xf4\xfb=j\t\xd6\xbe\xda\\\x00\xbf\xdb0\x95\xbf\xa0\x03\x0e\xbf-q\x80\xbcV\x99\xf2\xbe\xe3\x9b\x9f>8\xc3\xbe>\x80\x1a\xf3>ich\xbeyvy\xbc\xd10\x14>^\xb2\x97>b\x9fL>M\r\x00\xbfA\x8e\xc1>k\x86K\xbeZC\x88\xbdzg\x1e>\xa1\x89\xb5>A\xd2\x8c\xbe\x01\x87\xef\xbeI\xca\xb5>\xf6;5\xbd/V\x7f\xbe\xbe<\x1a@\xbd\xa9d?\x8d\xd6q?\x12u\xb3>\x055\xac\xbe\xb9V\x9b\xbe\xadd\xdd\xbe\xef\xd7\xf4>\xcf\xdf\xa0\xbe\xd9\x82X>6\xe9\xfe>\xcc\x03\x01\xbeuDO>\xd5R\n>9\xbd\x9c\xbf#U;\xbd\xb0\xf6\xe5\xbe]*:\xbfz\xb1\x15\xbfmu\xed\xbd+ \x8f>\x01\xdd\xf3\xbd\xc3\xa1\xbf>|9M?\x15\x0b\xa6>\x8e\x0f\xd6\xbe\x91\x05\x85>\xa1F\xa8\xbe\x1f\xf5#?\xf0\xb8e\xbf\x0cU\xab>\xddT\xcb>\xcc\xeb?\xbf\\c\x97\xbe\xd9\x810\xbf\xa1\x05\x0e>\xc4\xb7\x03\xbf\x1b\x83#? >\x81>\xbev\xf1\xbe\xc5\xbc\xff;y\x7f\xbe\xbe@j\x8c\xbd\xc1\xebd>3\x1d$\xbf\x89V\x9b\xbey-\xa6>%\xcc\x7f>yd*>o\xac\xe6\xbeS\x80\xe5=\xac\xca\xc0\xbe\x9f\xdb4\xbe\xf2\xae\x8d\xbe2@\x00\xbf\x92\x85[>\x10\xfb\x1e?\xed\xde\xed>nW\x86\xbe4\xda)\xbffN\x12\xbf\xa1C\x97>\xdc\x1e~>\x11\xa2\xb0?\x87v\x97?\x815\xa0\xbf\x9d\xd2_\xbd\x02\xca\x94>\xf2\xdb+\xbe/\xd0\xb0\xbb\x19\xa3\xce\xbe{;\x15\xbc\x1b?$?_\xd3m\xbf\xd1\x81\xb3\xbe\xf7\x04\xea\xbc\xa4S:>\xe9\xcf\xe7\xbe\xf8i\'?\xa67\xc6\xbe6\x05\xdc>\xc2H\x0c?\x07\x01-\xbe\xea\xbe~>\xaf\xe1<\xbe\x99\x9c\xce\xbeE\xdf\xad>\xbb\xd0\x8f<\x85\x83\x8e\xbfu\xa8\xad\xbf#[\x1d\xbf\xfc\x02+\xbf\xf2%\x94>-p\xcd>^(\x92>\xae\x97\x0c?\xe4\xb8\xc7=\x1c\xfa\xa9>$r-\xbd\xab\x03k\xbe\x12\xd4\x80>\xa1}a\xbf\x85\xa5\xcf\xbe\r\x10\x9e\xbe\x1d\xf8\xfe\xbe\x99FR\xbf-\xcd\xb8>^\xa9\xb5>z.\xd6>S\xbd\xd1\xbe\xa5H9\xbf,\x11"?<\x85\x15\xbe\x18<4\xbe\xdd\xb7\x88\xbe\x0c\x8bh?\xfbA\x9c=\x82>\x00\xbfT\x05\xe2\xbe \xf5(?\xf3u\xb5=\xe8}\xde\xbe\n8\xbc\xbe?\xfc\xa2\xbf H<\xbfZ\x84\xaf\xbe\x9b\xee\x1b?6\xb2D>v\xc9\x83>_B;>=\x80\x9d\xbe(\xeb)\xbe\x00?\xa0\xbd\x93b\xea\xbd{9\x07\xbeH\xc4\x94\xbf\xb9\xa6\x08\xbf\xe2<i\xbe\x8dI\x05\xbfO\x0f\x18?A\xdb!\xbf\x01\xdb\xd2\xbeiU\'\xbe\xc3\xce ?\x9e\xb6(\xbe\x95\x97\x02\xbe/?\xf6=\x82\x9f\x13?\x82g&>R\x07;\xbf\xc8\xc8{?\x12g\x15\xbf\x1a\xe2\xcc>\xf9L\xc2\xbeY18\xbf\xe7\xf4\xbb\xbe\x82B\x94?=q\xb8<\xb1>\x8d=\x1c\xb3\x1a\xbfHo\xa1\xbf\xb7\x1c\x07\xbds\xfe5>z@E=\'>\x17?$V\xf6\xbeY\xfc\xbc\xbe\xb3\xd2\x92\xbe\x9e\x8c]>u\x02\x02\xbf\n;\xf8\xbe\x80\xa6/?j\xfa\x17?\xd3H\x83\xbf\xda\xe5\xc5>\x17WZ=\xf5\xca\x02\xbf\xed\xbd\x11\xbf\xd4}\xe3?yt\x81?X\x16H\xbe\xdbZ\xa7\xbd\xdfy5\xbf\xa7\xb9\x11?D?\\\xbd\xe7\xf8\xce\xbe&\xea\x15\xbf\x11^\x1d\xbf~\xb2\x96\xbd\xf5\xb8\xfe>yUy>E\x80\xcd\xbd\xd0\x80\xa9\xbe\xbd`\xe4\xbe\x19\xae\xf7=C\xb4\xe7>5\xb7<\xbf\xb0\xcb\x8c>S\x9d;\xbe\xfc\xb7<\xbe\x02y\x1a\xbf:\xe4\x8f\xbfP\x83\x05?g\x18V\xbf\xab\xea.?b1\xbb\xbe\x91\xd1B\xbf\x95t\x1f\xbf}\xcfS\xbe-Q\x97>\xc6f\xe3\xbd\xf4o\x9b?\xad4\x10?s\x91]>U\xf8\x90\xbe\xc8\xc4\x91>Yk\xb1>\xd9pn?*hy\xbf\xcd\x11\x8e?r(p>\xfe\xfb\xd8\xbc\xd8\xd9!\xbf\x94\xa61>\xe2\x13\x0b?\x84G\x07?\xb7\xdb#>\xcf\xa8\xfb\xbd4\xfc\x1e>\xc8z\xdc\xbe\xba\xf0\x9c\xbe\xbf\xf9\xa5\xbe(\xb8|>\xee\xc2\xf1>\x1dg&?\x07\x97\xb9\xbe.\x01v\xbfu\x9ba?>\xcaD\xbe,\x1dA\xbe\xdc_\x0f>\xac`\xde>\xd3<\x8c\xbe\'\x88|<\xb3\xe20?LV\x0b\xbfs\xb0\x84?\r\t\xfb\xbdc\xc3 \xbb]\xff\x06?\xc7~\x8f\xbf\xff\xf0\x08\xbf\x111V?\xd6\x9e->V\xd0\xb6\xbd\x82\x97b\xbf\xfe7/\xbe\xd2,\xba>kH\xff\xbe\xbfH\xb0>\x94\xb3x\xbe6K#\xbfc\xd5D>\x1f\x8b\x91\xbe\xfc\\g>\x1e8\x18\xbewE\xfc\xbe>;\xb9\xbf\x84\xab\xe1>Jss\xbe\x85\xc1\xc7\xbe\x86\x97(\xbem\xe5\x99>\xaa\\\x83>\xda\x17\x85>\xca\xe83>\x08u\x1a>\xd0\xf7b\xbf\xc1\xd1\xe0=\x8ea\xde\xbe6y\xf1\xbe@\xd5S>a\xfd`?\xe6\xc0\xf2=&\x97\xda>\xaer\xfb\xbc\xbf`[\xc0\x87j\xc9>\x18W\xcc>\x05\xc9\x1d?c\x83\x84\xbfF}0>\xa4bN\xbe?)\x1e\xbe\x18\xce=>A\xa3y\xber\xddJ\xbe\xbe\xdd\x83>iD0\xbe\xaew2\xbf\xaf\xe9\xa2>\xdf\x8a\x10\xbf\xfd\xd3\xcc>\x1fj\xde\xbe{U\xf4?\xebv\x85\xbf\xd3\x1f\xcb>\x82,\xe8>\xa7\xe3$\xbf\xa4\xbb\xa0>\xab\t\x83\xbe\xdc\x95\xed\xbe@\xe2=>\xa5\\s\xbfh\x8b\t=3Lk?:G\x89\xbd\xb7F\xf6\xbf\x11\xfa\x81>\xc3\xcfU?\xc2\xf2\x9c\xbf\xe6`\xfe>I\x0bH\xbf\xdc\x07#\xbc\xccSZ?\x13\xe0\xfc<H\xf8\xdc\xbe\xd6\x84\x92\xbeW=*\xbe[\xb6\xbd\xbe.\xe0|\xbe\xc0\x14\x06\xbf\x8a*\xd3?\xf03-\xbf\xca\xaaY\xbd\xd2\xeb\x99\xbd\x8b\x18\xda>\x8a5\x01\xbe[\x88\r;3\x87\xd0>\xfa\xee\xe8\xbe\x00\xd3\x08?\xf5\xa4L>\xe8\xfca>\x19:\xa4\xbe\x1b5\x1c\xbe\xff{\xa3\xbc\xe9\x84\x03\xbe+\x16\x80\xbeGX2\xbfB\xab\xc7\xbe\xd1\xc5O>\xea\x1ba="\x028\xbf\tfA\xbe\xee\xcc\x02?|\x00\xe5=\xe3\xd6\x00\xbe\r{\x96>\x02@6\xbf\x84\xc78\xbe\xc6\x9f\x15>\xe8\xeb\x8e>\xdc\\\x84>\xde5V\xbf\xfd\x12w\xbe\x94\xf6\xe4\xbe\xf2p\xd3>\xf0{w\xbdS\x9a>\xbe\xe0\xd3\xe4>\x03\x93A\xbd\x99(\x94?\xab\x8aY\xbej\xcbp\xbe\xf0\xdaZ\xbf\x15\x85F\xbe\xef=D?\xcb\x19\x8c\xbc\xbb\xebS<\xbe\x86G\xbc\x9aWL?\xe8\x99H\xbe\xe4E\xae=k\xcb\x12\xbe\xc3P\x08?F\x17\x86\xbc^\x8ck\xbf\xafa\x82?\x13e\x96=\xd2\xdb\x0f\xbd\x9a\xea\xb2\xbe\xae\xb8\'\xbf\xf1\xed<>\xfex\x99\xbd\xcba\x86\xbe.5\x96>\x82\xbc\xf2\xbc\xe8B\xef\xbe\x06\xce\t?\xe1i\n>\x07n\xd8>hU\xa5\xbc,I>=\xaet\xdd\xbd2\xb8G=l\xe3m?\xa2\x95\xca\xbdz\xe7\xa0\xbe\xd7-\x95\xbeeB\x02?+\x9d-\xbf\x13\xa7\x8d>S\xeb=\xbfm\tn\xbe\x19\x1d\xbb\xbd\xd6\xa1\xe0\xbe\x83\xb4\x93<\xcc\x00]\xbey{\xd3=\x11j\xe8>\xbf\xe6T?\x80\xd9\xd4>A\xd1\x90>":\x85\xbd\xad#U\xbfy\xb4\x19>\x17\x0fI\xbf\xe7+\xfa>Y\xe3K\xbd&\xb5\xff\xbe\xa83]\xbeWH\x07>_\xab2>\\\x8f\x00\xbf"\x08\x86=u\xa4$\xbd\xa5\'\xe1\xbe_\x08\xa2\xbfk\x17\x07?2\xb8(\xbe\xb0\xb0\xf7>N\x16v=]7\xc9\xbdM\t\n?\x8a4f\xbf\xb2\xebr>\xbdnS=\x8d9\x96\xbe\xd2\xfb\xbd<(L.\xbf\x06\x17\x81>\xd6\x80U\xbe\x10\xdd1>S\x01\xca\xbe\xbbW\xd0=uR}>\xe6\x92\x99\xbb\x84\xb3\xb9\xbf\r\xe9\xe7\xbe3\xde\xaa>\x86)\x02\xbe\\\x99a=R\xc8\x1d\xbe\xba\x8d\x9f\xbe\x145\xbf\xbc\xcd\xaa\xcb\xbe\xf5)\x00\xbe\x93\xfc\xae>^\x98\xcd\xbe\xdf\xbd\x87\xbe\xb2SZ\xbet\xb0%\xbe\re\x84>\xb5\x87\xaa\xbe\x05\xb5.\xbf\xf3r\xd3>\xbeH+\xbe\x0c\x1f\x85\xbe1\xf4\x02\xbea\x13P\xbeb\r2>Z\xe9t\xbeb\xbe\x9d>\x0f\x14\x88\xbe\xab\xde\x82<\xb4b\xcc\xbd\x8f\xe2R>b\x9fv>\x98h\x93>\xdc\xfd\x95\xbe\x03} ?\xd1k\xf1\xbe\x85\x1dO\xbf\xa6\x84&>\xb4q\xc4\xbe\x0fE\x07?\xf4\x15\r?,\xe6+\xbe\x04}\xca<\x86\xbb\x96\xbe\x16\xf6r\xbf\xf5a\x93=\xf3\x03\x87\xbe\xd0c\r\xbe\x019&?\x9c\x93\xbd\xbfY\x99\x82\xbf\xe3\xf4(?\x9d\x88\xfc=\xee\xa2\xd0\xbe\x04|!\xbfE\xf6\xe0\xbeT\xce\xa3>\x0c\xcb\xac>\xa5\xee\xe0=\xcc\xd5e\xbfO\xe0\x1f>\xe9\xcc^=\xe0(M;\xe5D\xcd\xbe\xf9f\x82?\xcf8\x00\xbfY\xb3\xd6\xbe\xb3\x1b\x8b>\xc4\x9dS\xbf\xc0\xf6\xc8>\xcd\xee\x00?"\xe3\xe2>,\\\xeb=.F\xe0>\x1dH5\xbe\x88N\xd2=a\x9a\xf2\xbe;W\x00\xbe\x19oc>?\xe4\xc7\xbek\x1b!?\xcc\xe9\x8b>q\xa4\x0e>\x82\\\xa1\xbe\xb1\xe30\xbdR\x14^>^\x17Z=\xea\xe1\x81>\x8a\x8c\x97>\x16:A>`Rf\xbfr7f?\x1e\x99n\xbee\xc84?\xf7n\xd2=\x95\xa6\x08?A\xc4\x1a\xbfV\xab4=\xcf}\xab\xbe\x11l\xcc>\xca\xe8==\xf6T\x19>\xf1\x9fb?\x1a\xa1{?9\xd5o?m\x91\xe7\xbd\x1a\xde\x97>\xda\x81\x95\xbf\x1d\x0c%\xbe\xfczQ?\x95K\x86\xbd\xed\xe8\x01?\x99\r\xef\xbdJ\xaa];fh{\xbd\xd4k\x83\xbf\xc7l\x01\xbf@9\xe9>\x141(\xbf\xf3\xaa\xfd>\xc3\xb0\x1d?4\xfa"\xbf\\V\x10>\x11\rg>\xd7]\x1a\xbfp\xb7\x02?Dc\x82\xbd\xb9{n\xbf\x9e\xab\xa0\xbe\xef\x00\xdb\xbe\xd58\xb8>D\xd0V\xbe\x9cM\x01\xbf\xa1\xe7\xff>9C\x1a?\xec\xf6%\xbc\x9a\x0e,\xbf\xc7\xf9B\xbf3.\x96\xbe\xf9\x03\xb2\xbf\x18\x97\x8b\xbe\x9b\xff\x0c>\x9a4\xf4>\xac+B\xbeW\xd0\xff>\xc1En\xbf\x94t\xe9>\xae\xb4h\xbe\xff\xe4\xb9>\xda\xe4\xb7?\xb1F\x05\xbdE-\xf3\xbd\xe0vw=\xd4\'\xa3>\xd5F\xc7\xbd\xc5dq\xbe\xb6\xa8\xee\xbcL\xde\xb1\xbe@\x0eo>\xf5\x1e\xc2>[qE?#^\xec\xbeb\x93\xd4>\xbc\x9b\xa8\xbc\xd8\x92\x00\xbf\xeb\xd4\xeb\xbe\xc4\x1d\xba\xbe\xbe\x91\xdc\xbd\xac\xa7\x8f\xbe.(\x18>\xd0\x87\x90=8\x8fE\xbf\t\xc07?Y\x0f?\xbe\x14#C?4\x96\xaf\xbe\xc3\x0e\x9f=\xf8g7\xbf4\x9d}>h\x03^\xbe\x8bE\x8a>\x07Ow\xbej/\xfa\xbdM\xf5\xd7>[\xbc\x0c\xbe[\xf3\xa6\xbe\xb7;O?p\xa6\xce\xbe\xcc\xd8\x98>\xb3\xe1\xa5\xbd^B\x00\xbf\x99\x14\x80\xbe\x82\x00\xb0\xbe\xb8)\x17>p\x0f\xa3\xbc]\x0f\x82>v\x86 ?f\x80 ?\x03\t\xb3=c\x97\xb4\xbf\xda\x8f_\xbf5\xae\x01\xbf\x83\x17\xea>\xb8\xbd\x84=9\xcd\xeb=\xd1\xe2I\xbf\x16\xcb\x82<\xea\xfc\x10\xbf\xf297\xbc\xce\xaa\xf3\xbe\xd8H\x17\xbe\xa8]I\xbfc\xaa\xfa\xbe\x0cY\xcb=#:+? \xc2\xaa>\xb5\x81\xa9\xbe\x83~4\xbe\x1f&\x1d\xbe\x8a\xcd9?'
tbasg33
I00
sg34
I00
sg35
g1
(g36
g3
NtRp110
(dp111
g39
(I00
I00
tp112
sg41
S'float32'
p113
sg43
g32
sg44
I00
sg25
Nsbsg45
Nsbsg25
Nsg46
Nsg35
g110
sbag1
(g64
g3
NtRp114
(dp115
g10
S'auto_720'
p116
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p117
(dp118
bsg25
Nsg46
g1
(g74
g3
NtRp119
(dp120
g77
(lp121
g1
(ctheano.tensor.var
TensorConstant
p122
g3
NtRp123
(dp124
g10
S'auto_716'
p125
sg12
Nsg13
(itheano.gof.utils
scratchpad
p126
(dp127
S'unique_value'
p128
Nsbsg25
NsS'cached'
p129
I01
sg35
g1
(g36
g3
NtRp130
(dp131
g39
(tsg41
S'int8'
p132
sg43
g31
(S'i1'
I0
I1
tRp133
(I3
S'|'
NNNI-1
I-1
I0
tbsg44
I00
sg25
NsbsS'data'
p134
g28
(g29
(I0
tS'b'
tRp135
(I1
(tg133
I00
S'\x02'
tbsbasg13
(itheano.gof.utils
scratchpad
p136
(dp137
bsS'outputs'
p138
(lp139
g114
asS'op'
p140
g1
(ctheano.tensor.elemwise
DimShuffle
p141
g3
NtRp142
(dp143
S'drop'
p144
(lp145
sS'shuffle'
p146
(lp147
sS'augment'
p148
(lp149
I0
aI1
asS'input_broadcastable'
p150
(tsS'inplace'
p151
I00
sS'new_order'
p152
(S'x'
S'x'
tp153
sS'_op_use_c_code'
p154
S'/app/compilers/gnu/4.6.2/bin/g++'
p155
sbsbsg35
g1
(g36
g3
NtRp156
(dp157
g39
(I01
I01
tp158
sg41
g132
sg43
g133
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p159
(dp160
bsg138
(lp161
g89
asg140
g1
(ctheano.tensor.elemwise
Elemwise
p162
g3
NtRp163
(dp164
S'__module__'
p165
S'tensor'
p166
sS'scalar_op'
p167
g1
(ctheano.scalar.basic
Pow
p168
g3
NtRp169
(dp170
S'output_types_preference'
p171
ctheano.scalar.basic
upcast_out
p172
sg154
g155
sg25
S'pow'
p173
sbsg25
S'Elemwise{pow,no_inplace}'
p174
sg154
g155
sS'destroy_map'
p175
(dp176
sS'nfunc_spec'
p177
(S'power'
p178
I2
I1
tp179
sS'inplace_pattern'
p180
(dp181
sS'openmp'
p182
I00
sS'__doc__'
p183
S"elementwise power\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Examples:\n      Elemwise(add) # represents + on tensors (x + y)\n      Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n      Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n      Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n        # along the first dimension to match the first input\n      Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n        # second dimension\n      Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n      Elemwise(log)(rand(3, 4, 5))\n    "
p184
sbsbsg35
g1
(g36
g3
NtRp185
(dp186
g39
(I00
I00
tp187
sg41
S'float32'
p188
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p189
(dp190
bsg138
(lp191
g79
asg140
g1
(ctheano.tensor.elemwise
Sum
p192
g3
NtRp193
(dp194
S'acc_dtype'
p195
S'float64'
p196
sg41
g188
sg154
g155
sg167
g1
(ctheano.scalar.basic
Add
p197
g3
NtRp198
(dp199
g171
g172
sg154
g155
sg25
S'add'
p200
sbsS'axis'
p201
Nsbsbsg35
g1
(g36
g3
NtRp202
(dp203
g39
(tsg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbag1
(g64
g3
NtRp204
(dp205
g10
S'auto_729'
p206
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p207
(dp208
g16
(lp209
(g71
I257
g72
S'self.L2_sqr = T.sum((self.W_h**2)) + T.sum((self.W_o**2))'
tp210
asbsg25
Nsg46
g1
(g74
g3
NtRp211
(dp212
g77
(lp213
g1
(g64
g3
NtRp214
(dp215
g10
S'auto_728'
p216
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p217
(dp218
g16
(lp219
(g71
I257
g72
S'self.L2_sqr = T.sum((self.W_h**2)) + T.sum((self.W_o**2))'
tp220
asbsg25
Nsg46
g1
(g74
g3
NtRp221
(dp222
g77
(lp223
g48
ag1
(g64
g3
NtRp224
(dp225
g10
S'auto_727'
p226
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p227
(dp228
bsg25
Nsg46
g1
(g74
g3
NtRp229
(dp230
g77
(lp231
g123
asg13
(itheano.gof.utils
scratchpad
p232
(dp233
bsg138
(lp234
g224
asg140
g1
(g141
g3
NtRp235
(dp236
g144
(lp237
sg146
(lp238
sg148
(lp239
I0
aI1
asg150
(tsg151
I00
sg152
(S'x'
S'x'
tp240
sg154
g155
sbsbsg35
g1
(g36
g3
NtRp241
(dp242
g39
(I01
I01
tp243
sg41
g132
sg43
g133
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p244
(dp245
bsg138
(lp246
g214
asg140
g163
sbsg35
g1
(g36
g3
NtRp247
(dp248
g39
(I00
I00
tp249
sg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p250
(dp251
bsg138
(lp252
g204
asg140
g1
(g192
g3
NtRp253
(dp254
g195
g196
sg41
g188
sg154
g155
sg167
g198
sg201
Nsbsbsg35
g1
(g36
g3
NtRp255
(dp256
g39
(tsg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p257
(dp258
bsg138
(lp259
g65
asg140
g1
(g162
g3
NtRp260
(dp261
g165
g166
sg167
g198
sg25
S'Elemwise{add,no_inplace}'
p262
sg154
g155
sg175
(dp263
sg177
(g200
I2
I1
tp264
sg180
(dp265
sg182
I00
sg183
S"elementwise addition\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Examples:\n      Elemwise(add) # represents + on tensors (x + y)\n      Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n      Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n      Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n        # along the first dimension to match the first input\n      Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n        # second dimension\n      Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n      Elemwise(log)(rand(3, 4, 5))\n    "
p266
sbsbsg35
g1
(g36
g3
NtRp267
(dp268
g39
(tsg41
g188
sg43
g32
sg44
I00
sg25
NsbsbsS'W_h'
p269
g99
sS'b_o'
p270
g1
(g7
g3
NtRp271
(dp272
g10
S'auto_658'
p273
sg12
Nsg13
(itheano.gof.utils
scratchpad
p274
(dp275
g16
(lp276
(g18
I209
g19
S'utils.add_tag_trace(var)'
tp277
asbsg21
g1
(g22
g3
NtRp278
(dp279
g25
Nsg26
(lp280
g28
(g29
(I0
tS'b'
tRp281
(I1
(I3
tg32
I00
S'\x96\xde\x13;\x0b|\x01\xc0\xd7O\x01@'
tbasg33
I00
sg34
I00
sg35
g1
(g36
g3
NtRp282
(dp283
g39
(I00
tp284
sg41
S'float32'
p285
sg43
g32
sg44
I00
sg25
Nsbsg45
Nsbsg25
Nsg46
Nsg35
g282
sbsS'py_x'
p286
g1
(g64
g3
NtRp287
(dp288
g10
S'auto_676'
p289
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p290
(dp291
g16
(lp292
(g71
I252
g72
S'self.py_x = T.nnet.softmax(T.dot(h, self.W_o) + self.b_o)'
tp293
asbsg25
Nsg46
g1
(g74
g3
NtRp294
(dp295
g77
(lp296
g1
(g64
g3
NtRp297
(dp298
g10
S'auto_675'
p299
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p300
(dp301
g16
(lp302
(g71
I252
g72
S'self.py_x = T.nnet.softmax(T.dot(h, self.W_o) + self.b_o)'
tp303
asbsg25
Nsg46
g1
(g74
g3
NtRp304
(dp305
g77
(lp306
g1
(g64
g3
NtRp307
(dp308
g10
S'auto_670'
p309
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p310
(dp311
g16
(lp312
(g71
I252
g72
S'self.py_x = T.nnet.softmax(T.dot(h, self.W_o) + self.b_o)'
tp313
asbsg25
Nsg46
g1
(g74
g3
NtRp314
(dp315
g77
(lp316
g1
(g64
g3
NtRp317
(dp318
g10
S'auto_669'
p319
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p320
(dp321
g16
(lp322
(g71
I251
g72
S'h = T.nnet.sigmoid(T.dot(self.X, self.W_h) + self.b_h)'
tp323
asbsg25
Nsg46
g1
(g74
g3
NtRp324
(dp325
g77
(lp326
g1
(g64
g3
NtRp327
(dp328
g10
S'auto_666'
p329
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p330
(dp331
g16
(lp332
(g71
I251
g72
S'h = T.nnet.sigmoid(T.dot(self.X, self.W_h) + self.b_h)'
tp333
asbsg25
Nsg46
g1
(g74
g3
NtRp334
(dp335
g77
(lp336
g1
(g64
g3
NtRp337
(dp338
g10
S'auto_661'
p339
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p340
(dp341
g16
(lp342
(g71
I251
g72
S'h = T.nnet.sigmoid(T.dot(self.X, self.W_h) + self.b_h)'
tp343
asbsg25
Nsg46
g1
(g74
g3
NtRp344
(dp345
g77
(lp346
g1
(g64
g3
NtRp347
(dp348
g10
S'auto_659'
p349
sg12
Nsg13
(itheano.gof.utils
scratchpad
p350
(dp351
g16
(lp352
(g71
I248
g72
S'self.X = T.matrix()'
tp353
asbsg25
Nsg46
Nsg35
g1
(g36
g3
NtRp354
(dp355
g39
(I00
I00
tp356
sg41
S'float32'
p357
sg43
g32
sg44
I00
sg25
Nsbsbag99
asg13
(itheano.gof.utils
scratchpad
p358
(dp359
bsg138
(lp360
g337
asg140
g1
(ctheano.tensor.basic
Dot
p361
g3
NtRp362
(dp363
g154
g155
sbsbsg35
g1
(g36
g3
NtRp364
(dp365
g39
(I00
I00
tp366
sg41
S'float32'
p367
sg43
g32
sg44
I00
sg25
Nsbsbag1
(g64
g3
NtRp368
(dp369
g10
S'auto_665'
p370
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p371
(dp372
bsg25
Nsg46
g1
(g74
g3
NtRp373
(dp374
g77
(lp375
g8
asg13
(itheano.gof.utils
scratchpad
p376
(dp377
bsg138
(lp378
g368
asg140
g1
(g141
g3
NtRp379
(dp380
g144
(lp381
sg146
(lp382
I0
asg148
(lp383
I0
asg150
g40
sg151
I00
sg152
(S'x'
I0
tp384
sg154
g155
sbsbsg35
g1
(g36
g3
NtRp385
(dp386
g39
(I01
I00
tp387
sg41
g42
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p388
(dp389
bsg138
(lp390
g327
asg140
g260
sbsg35
g1
(g36
g3
NtRp391
(dp392
g39
(I00
I00
tp393
sg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p394
(dp395
bsg138
(lp396
g317
asg140
g1
(g162
g3
NtRp397
(dp398
g25
S'sigmoid'
p399
sg167
g1
(ctheano.tensor.nnet.sigm
ScalarSigmoid
p400
g3
NtRp401
(dp402
g171
ctheano.scalar.basic
upgrade_to_float
p403
sg154
g155
sg25
S'scalar_sigmoid'
p404
sbsg175
(dp405
sg177
Nsg180
(dp406
sg182
I00
sg154
g155
sbsbsg35
g1
(g36
g3
NtRp407
(dp408
g39
(I00
I00
tp409
sg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbag48
asg13
(itheano.gof.utils
scratchpad
p410
(dp411
bsg138
(lp412
g307
asg140
g362
sbsg35
g1
(g36
g3
NtRp413
(dp414
g39
(I00
I00
tp415
sg41
S'float32'
p416
sg43
g32
sg44
I00
sg25
Nsbsbag1
(g64
g3
NtRp417
(dp418
g10
S'auto_674'
p419
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p420
(dp421
bsg25
Nsg46
g1
(g74
g3
NtRp422
(dp423
g77
(lp424
g271
asg13
(itheano.gof.utils
scratchpad
p425
(dp426
bsg138
(lp427
g417
asg140
g1
(g141
g3
NtRp428
(dp429
g144
(lp430
sg146
(lp431
I0
asg148
(lp432
I0
asg150
g284
sg151
I00
sg152
(S'x'
I0
tp433
sg154
g155
sbsbsg35
g1
(g36
g3
NtRp434
(dp435
g39
(I01
I00
tp436
sg41
g285
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p437
(dp438
bsg138
(lp439
g297
asg140
g260
sbsg35
g1
(g36
g3
NtRp440
(dp441
g39
(I00
I00
tp442
sg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p443
(dp444
bsg138
(lp445
g287
asg140
g1
(ctheano.tensor.nnet.nnet
Softmax
p446
g3
NtRp447
(dp448
g154
g155
sbsbsg35
g440
sbsS'params'
p449
(lp450
g99
ag8
ag48
ag271
asS'L1'
p451
g1
(g64
g3
NtRp452
(dp453
g10
S'auto_715'
p454
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p455
(dp456
g16
(lp457
(g71
I256
g72
S'self.L1 = T.sum(abs(self.W_h)) + T.sum(abs(self.W_o))'
tp458
asbsg25
Nsg46
g1
(g74
g3
NtRp459
(dp460
g77
(lp461
g1
(g64
g3
NtRp462
(dp463
g10
S'auto_707'
p464
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p465
(dp466
g16
(lp467
(g71
I256
g72
S'self.L1 = T.sum(abs(self.W_h)) + T.sum(abs(self.W_o))'
tp468
asbsg25
Nsg46
g1
(g74
g3
NtRp469
(dp470
g77
(lp471
g1
(g64
g3
NtRp472
(dp473
g10
S'auto_706'
p474
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p475
(dp476
g16
(lp477
(g71
I256
g72
S'self.L1 = T.sum(abs(self.W_h)) + T.sum(abs(self.W_o))'
tp478
asbsg25
Nsg46
g1
(g74
g3
NtRp479
(dp480
g77
(lp481
g99
asg13
(itheano.gof.utils
scratchpad
p482
(dp483
bsg138
(lp484
g472
asg140
g1
(g162
g3
NtRp485
(dp486
g165
g166
sg167
g1
(ctheano.scalar.basic
Abs
p487
g3
NtRp488
(dp489
g171
ctheano.scalar.basic
same_out
p490
sg154
g155
sg25
Nsbsg25
S'Elemwise{abs_,no_inplace}'
p491
sg154
g155
sg175
(dp492
sg177
(S'abs'
p493
I1
I1
tp494
sg180
(dp495
sg182
I00
sg183
S"|`a`|\n\n    TensorVariable overloads the `TensorVariable.__abs__` operator so that\n    this function is called when you type abs(a).\n\n    \n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Examples:\n      Elemwise(add) # represents + on tensors (x + y)\n      Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n      Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n      Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n        # along the first dimension to match the first input\n      Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n        # second dimension\n      Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n      Elemwise(log)(rand(3, 4, 5))\n    "
p496
sbsbsg35
g1
(g36
g3
NtRp497
(dp498
g39
(I00
I00
tp499
sg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p500
(dp501
bsg138
(lp502
g462
asg140
g1
(g192
g3
NtRp503
(dp504
g195
g196
sg41
g188
sg154
g155
sg167
g198
sg201
Nsbsbsg35
g1
(g36
g3
NtRp505
(dp506
g39
(tsg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbag1
(g64
g3
NtRp507
(dp508
g10
S'auto_711'
p509
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p510
(dp511
g16
(lp512
(g71
I256
g72
S'self.L1 = T.sum(abs(self.W_h)) + T.sum(abs(self.W_o))'
tp513
asbsg25
Nsg46
g1
(g74
g3
NtRp514
(dp515
g77
(lp516
g1
(g64
g3
NtRp517
(dp518
g10
S'auto_710'
p519
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p520
(dp521
g16
(lp522
(g71
I256
g72
S'self.L1 = T.sum(abs(self.W_h)) + T.sum(abs(self.W_o))'
tp523
asbsg25
Nsg46
g1
(g74
g3
NtRp524
(dp525
g77
(lp526
g48
asg13
(itheano.gof.utils
scratchpad
p527
(dp528
bsg138
(lp529
g517
asg140
g485
sbsg35
g1
(g36
g3
NtRp530
(dp531
g39
(I00
I00
tp532
sg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p533
(dp534
bsg138
(lp535
g507
asg140
g1
(g192
g3
NtRp536
(dp537
g195
g196
sg41
g188
sg154
g155
sg167
g198
sg201
Nsbsbsg35
g1
(g36
g3
NtRp538
(dp539
g39
(tsg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p540
(dp541
bsg138
(lp542
g452
asg140
g260
sbsg35
g1
(g36
g3
NtRp543
(dp544
g39
(tsg41
g188
sg43
g32
sg44
I00
sg25
NsbsbsS'Y'
g1
(g64
g3
NtRp545
(dp546
g10
S'auto_660'
p547
sg12
Nsg13
(itheano.gof.utils
scratchpad
p548
(dp549
g16
(lp550
(g71
I249
g72
S'self.Y = T.matrix()'
tp551
asbsg25
Nsg46
Nsg35
g1
(g36
g3
NtRp552
(dp553
g39
(I00
I00
tp554
sg41
g357
sg43
g32
sg44
I00
sg25
NsbsbsS'X'
g347
sS'NLL'
p555
g1
(g64
g3
NtRp556
(dp557
g10
S'auto_703'
p558
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p559
(dp560
g16
(lp561
(g71
I255
g72
S'self.NLL = -T.mean(T.log(self.py_x)[T.arange(self.Y.shape[0]), y])'
tp562
asbsg25
Nsg46
g1
(g74
g3
NtRp563
(dp564
g77
(lp565
g1
(g64
g3
NtRp566
(dp567
g10
S'auto_700'
p568
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p569
(dp570
g16
(lp571
(g71
I255
g72
S'self.NLL = -T.mean(T.log(self.py_x)[T.arange(self.Y.shape[0]), y])'
tp572
asbsg25
Nsg46
g1
(g74
g3
NtRp573
(dp574
g77
(lp575
g1
(g64
g3
NtRp576
(dp577
g10
S'auto_690'
p578
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p579
(dp580
g16
(lp581
sbsg25
Nsg46
g1
(g74
g3
NtRp582
(dp583
g77
(lp584
g1
(g64
g3
NtRp585
(dp586
g10
S'auto_689'
p587
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p588
(dp589
g16
(lp590
(g71
I255
g72
S'self.NLL = -T.mean(T.log(self.py_x)[T.arange(self.Y.shape[0]), y])'
tp591
asbsg25
Nsg46
g1
(g74
g3
NtRp592
(dp593
g77
(lp594
g1
(g64
g3
NtRp595
(dp596
g10
S'auto_682'
p597
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p598
(dp599
g16
(lp600
(g71
I255
g72
S'self.NLL = -T.mean(T.log(self.py_x)[T.arange(self.Y.shape[0]), y])'
tp601
asbsg25
Nsg46
g1
(g74
g3
NtRp602
(dp603
g77
(lp604
g287
asg13
(itheano.gof.utils
scratchpad
p605
(dp606
bsg138
(lp607
g595
asg140
g1
(g162
g3
NtRp608
(dp609
g165
g166
sg167
g1
(ctheano.scalar.basic
Log
p610
g3
NtRp611
(dp612
g171
g403
sg154
g155
sg25
S'log'
p613
sbsg25
S'Elemwise{log,no_inplace}'
p614
sg154
g155
sg175
(dp615
sg177
(g613
I1
I1
tp616
sg180
(dp617
sg182
I00
sg183
S"base e logarithm of a\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Examples:\n      Elemwise(add) # represents + on tensors (x + y)\n      Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n      Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n      Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n        # along the first dimension to match the first input\n      Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n        # second dimension\n      Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n      Elemwise(log)(rand(3, 4, 5))\n    "
p618
sbsbsg35
g1
(g36
g3
NtRp619
(dp620
g39
(I00
I00
tp621
sg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbag1
(g64
g3
NtRp622
(dp623
g10
S'auto_688'
p624
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p625
(dp626
g16
(lp627
(g71
I255
g72
S'self.NLL = -T.mean(T.log(self.py_x)[T.arange(self.Y.shape[0]), y])'
tp628
asbsg25
Nsg46
g1
(g74
g3
NtRp629
(dp630
g77
(lp631
g1
(g122
g3
NtRp632
(dp633
g10
S'auto_686'
p634
sg12
Nsg13
(itheano.gof.utils
scratchpad
p635
(dp636
g128
Nsbsg25
Nsg129
I01
sg35
g1
(g36
g3
NtRp637
(dp638
g39
(tsg41
S'int8'
p639
sg43
g133
sg44
I00
sg25
Nsbsg134
g28
(g29
(I0
tS'b'
tRp640
(I1
(tg133
I00
S'\x00'
tbsbag1
(g64
g3
NtRp641
(dp642
g10
S'auto_685'
p643
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p644
(dp645
g16
(lp646
(g71
I255
g72
S'self.NLL = -T.mean(T.log(self.py_x)[T.arange(self.Y.shape[0]), y])'
tp647
asbsg25
Nsg46
g1
(g74
g3
NtRp648
(dp649
g77
(lp650
g1
(g64
g3
NtRp651
(dp652
g10
S'auto_683'
p653
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p654
(dp655
g16
(lp656
(S'/home/junshuai.zhang/theano/lib/python2.7/site-packages/Theano-0.7.0rc2-py2.7.egg/theano/compile/ops.py'
p657
I239
S'make_node'
p658
S'return gof.Apply(self, [x], [theano.tensor.lvector()])'
tp659
asbsg25
Nsg46
g1
(g74
g3
NtRp660
(dp661
g77
(lp662
g545
asg13
(itheano.gof.utils
scratchpad
p663
(dp664
bsg138
(lp665
g651
asg140
g1
(ctheano.compile.ops
Shape
p666
g3
NtRp667
(dp668
g154
g155
sbsbsg35
g1
(g36
g3
NtRp669
(dp670
g39
(I00
tp671
sg41
S'int64'
p672
sg43
g31
(S'i8'
I0
I1
tRp673
(I3
S'<'
NNNI-1
I-1
I0
tbsg44
I00
sg25
Nsbsbag1
(ctheano.scalar.basic
ScalarConstant
p674
g3
NtRp675
(dp676
g10
S'auto_684'
p677
sg12
Nsg13
(itheano.gof.utils
scratchpad
p678
(dp679
bsg25
Nsg35
g1
(ctheano.scalar.basic
Scalar
p680
g3
NtRp681
(dp682
g41
g672
sbsg134
cnumpy.core.multiarray
scalar
p683
(g673
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp684
sbasg13
(itheano.gof.utils
scratchpad
p685
(dp686
bsg138
(lp687
g641
asg140
g1
(ctheano.tensor.subtensor
Subtensor
p688
g3
NtRp689
(dp690
S'idx_list'
p691
(g681
tp692
sg154
g155
sbsbsg35
g1
(g36
g3
NtRp693
(dp694
g39
(tsg41
g672
sg43
g673
sg44
I00
sg25
Nsbsbag1
(g122
g3
NtRp695
(dp696
g10
S'auto_677'
p697
sg12
Nsg13
(itheano.gof.utils
scratchpad
p698
(dp699
g128
Nsbsg25
Nsg129
I01
sg35
g1
(g36
g3
NtRp700
(dp701
g39
(tsg41
S'int8'
p702
sg43
g133
sg44
I00
sg25
Nsbsg134
g28
(g29
(I0
tS'b'
tRp703
(I1
(tg133
I00
S'\x01'
tbsbasg13
(itheano.gof.utils
scratchpad
p704
(dp705
bsg138
(lp706
g622
asg140
g1
(ctheano.tensor.basic
ARange
p707
g3
NtRp708
(dp709
g41
S'int64'
p710
sg154
g155
sbsbsg35
g1
(g36
g3
NtRp711
(dp712
g39
(I00
tp713
sg41
g710
sg43
g673
sg44
I00
sg25
Nsbsbag1
(g64
g3
NtRp714
(dp715
g10
S'auto_679'
p716
sg12
I1
sg13
(itheano.gof.utils
scratchpad
p717
(dp718
g16
(lp719
sbsg25
S'argmax'
p720
sg46
g1
(g74
g3
NtRp721
(dp722
g77
(lp723
g545
ag695
asg13
(itheano.gof.utils
scratchpad
p724
(dp725
bsg138
(lp726
g1
(g64
g3
NtRp727
(dp728
g10
S'auto_678'
p729
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p730
(dp731
g16
(lp732
sbsg25
S'max'
p733
sg46
g721
sg35
g1
(g36
g3
NtRp734
(dp735
g39
(I00
tp736
sg41
g357
sg43
g32
sg44
I00
sg25
Nsbsbag714
asg140
g1
(ctheano.tensor.basic
MaxAndArgmax
p737
g3
NtRp738
(dp739
g154
g155
sbsbsg35
g1
(g36
g3
NtRp740
(dp741
g39
(I00
tp742
sg41
g672
sg43
g673
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p743
(dp744
bsg138
(lp745
g585
asg140
g1
(ctheano.tensor.subtensor
AdvancedSubtensor
p746
g3
NtRp747
(dp748
g154
g155
sbsbsg35
g1
(g36
g3
NtRp749
(dp750
g39
(I00
tp751
sg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p752
(dp753
bsg138
(lp754
g576
asg140
g1
(g192
g3
NtRp755
(dp756
g195
g196
sg41
g188
sg154
g155
sg167
g198
sg201
Nsbsbsg35
g1
(g36
g3
NtRp757
(dp758
g39
(tsg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbag1
(g64
g3
NtRp759
(dp760
g10
S'auto_696'
p761
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p762
(dp763
g16
(lp764
sbsg25
Nsg46
g1
(g74
g3
NtRp765
(dp766
g77
(lp767
g1
(g64
g3
NtRp768
(dp769
g10
S'auto_694'
p770
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p771
(dp772
g16
(lp773
(g71
I255
g72
S'self.NLL = -T.mean(T.log(self.py_x)[T.arange(self.Y.shape[0]), y])'
tp774
asbsg25
Nsg46
g1
(g74
g3
NtRp775
(dp776
g77
(lp777
g1
(g64
g3
NtRp778
(dp779
g10
S'auto_691'
p780
sg12
I0
sg13
(itheano.gof.utils
scratchpad
p781
(dp782
g16
(lp783
(g657
I239
g658
S'return gof.Apply(self, [x], [theano.tensor.lvector()])'
tp784
asbsg25
Nsg46
g1
(g74
g3
NtRp785
(dp786
g77
(lp787
g585
asg13
(itheano.gof.utils
scratchpad
p788
(dp789
bsg138
(lp790
g778
asg140
g667
sbsg35
g669
sbasg13
(itheano.gof.utils
scratchpad
p791
(dp792
bsg138
(lp793
g768
asg140
g1
(g162
g3
NtRp794
(dp795
g165
S'tensor.basic'
p796
sg25
Nsg167
g1
(ctheano.scalar.basic
Cast
p797
g3
NtRp798
(dp799
g171
g1
(ctheano.scalar.basic
specific_out
p800
g3
NtRp801
(dp802
S'spec'
p803
(g1
(g680
g3
NtRp804
(dp805
g41
g188
sbtp806
sbsg154
g155
sS'o_type'
p807
g804
sg25
S'convert_to_float32'
p808
sS'ctor'
p809
cnumpy
float32
p810
sbsg175
(dp811
sg177
Nsg180
(dp812
sS'__oplist_tags'
p813
(lp814
S'casting'
p815
asg182
I00
sg154
g155
sbsbsg35
g1
(g36
g3
NtRp816
(dp817
g39
(I00
tp818
sg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbag1
(g674
g3
NtRp819
(dp820
g10
S'auto_695'
p821
sg12
Nsg13
(itheano.gof.utils
scratchpad
p822
(dp823
bsg25
Nsg35
g681
sg134
g683
(g673
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp824
sbasg13
(itheano.gof.utils
scratchpad
p825
(dp826
bsg138
(lp827
g759
asg140
g1
(g688
g3
NtRp828
(dp829
g691
(g681
tp830
sg154
g155
sbsbsg35
g1
(g36
g3
NtRp831
(dp832
g39
(tsg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p833
(dp834
bsg138
(lp835
g566
asg140
g1
(g162
g3
NtRp836
(dp837
g165
g166
sg167
g1
(ctheano.scalar.basic
TrueDiv
p838
g3
NtRp839
(dp840
g171
g172
sg154
g155
sg25
S'true_div'
p841
sbsg25
S'Elemwise{true_div,no_inplace}'
p842
sg154
g155
sg175
(dp843
sg177
(S'true_divide'
p844
I2
I1
tp845
sg180
(dp846
sg182
I00
sg183
S"elementwise [true] division (inverse of multiplication)\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Examples:\n      Elemwise(add) # represents + on tensors (x + y)\n      Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n      Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n      Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n        # along the first dimension to match the first input\n      Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n        # second dimension\n      Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n      Elemwise(log)(rand(3, 4, 5))\n    "
p847
sbsbsg35
g1
(g36
g3
NtRp848
(dp849
g39
(tsg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbasg13
(itheano.gof.utils
scratchpad
p850
(dp851
bsg138
(lp852
g556
asg140
g1
(g162
g3
NtRp853
(dp854
g165
g166
sg167
g1
(ctheano.scalar.basic
Neg
p855
g3
NtRp856
(dp857
g171
g490
sg154
g155
sg25
S'neg'
p858
sbsg25
S'Elemwise{neg,no_inplace}'
p859
sg154
g155
sg175
(dp860
sg177
(S'negative'
p861
I1
I1
tp862
sg180
(dp863
sg182
I00
sg183
S"-a\n\n    Generalizes a scalar op to tensors.\n\n    All the inputs must have the same number of dimensions. When the\n    Op is performed, for each dimension, each input's size for that\n    dimension must be the same. As a special case, it can also be 1\n    but only if the input's broadcastable flag is True for that\n    dimension. In that case, the tensor is (virtually) replicated\n    along that dimension to match the size of the others.\n\n    The dtypes of the outputs mirror those of the scalar Op that is\n    being generalized to tensors. In particular, if the calculations\n    for an output are done inplace on an input, the output type must\n    be the same as the corresponding input type (see the doc of\n    scalar.ScalarOp to get help about controlling the output type)\n\n    Examples:\n      Elemwise(add) # represents + on tensors (x + y)\n      Elemwise(add, {0 : 0}) # represents the += operation (x += y)\n      Elemwise(add, {0 : 1}) # represents += on the second argument (y += x)\n      Elemwise(mul)(rand(10, 5), rand(1, 5)) # the second input is completed\n        # along the first dimension to match the first input\n      Elemwise(true_div)(rand(10, 5), rand(10, 1)) # same but along the\n        # second dimension\n      Elemwise(int_div)(rand(1, 5), rand(10, 1)) # the output has size (10, 5)\n      Elemwise(log)(rand(3, 4, 5))\n    "
p864
sbsbsg35
g1
(g36
g3
NtRp865
(dp866
g39
(tsg41
g188
sg43
g32
sg44
I00
sg25
Nsbsbsb.